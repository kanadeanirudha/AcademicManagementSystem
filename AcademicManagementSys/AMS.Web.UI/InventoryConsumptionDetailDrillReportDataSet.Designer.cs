//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AMS.Web.UI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InventoryConsumptionDetailDrillReportDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InventoryConsumptionDetailDrillReportDataSet : global::System.Data.DataSet {
        
        private TBL_InventoryConsumptionDrillReportDataSetDataTable tableTBL_InventoryConsumptionDrillReportDataSet;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InventoryConsumptionDetailDrillReportDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected InventoryConsumptionDetailDrillReportDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TBL_InventoryConsumptionDrillReportDataSet"] != null)) {
                    base.Tables.Add(new TBL_InventoryConsumptionDrillReportDataSetDataTable(ds.Tables["TBL_InventoryConsumptionDrillReportDataSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBL_InventoryConsumptionDrillReportDataSetDataTable TBL_InventoryConsumptionDrillReportDataSet {
            get {
                return this.tableTBL_InventoryConsumptionDrillReportDataSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InventoryConsumptionDetailDrillReportDataSet cln = ((InventoryConsumptionDetailDrillReportDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TBL_InventoryConsumptionDrillReportDataSet"] != null)) {
                    base.Tables.Add(new TBL_InventoryConsumptionDrillReportDataSetDataTable(ds.Tables["TBL_InventoryConsumptionDrillReportDataSet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTBL_InventoryConsumptionDrillReportDataSet = ((TBL_InventoryConsumptionDrillReportDataSetDataTable)(base.Tables["TBL_InventoryConsumptionDrillReportDataSet"]));
            if ((initTable == true)) {
                if ((this.tableTBL_InventoryConsumptionDrillReportDataSet != null)) {
                    this.tableTBL_InventoryConsumptionDrillReportDataSet.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InventoryConsumptionDetailDrillReportDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InventoryConsumptionDetailDrillReportDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTBL_InventoryConsumptionDrillReportDataSet = new TBL_InventoryConsumptionDrillReportDataSetDataTable();
            base.Tables.Add(this.tableTBL_InventoryConsumptionDrillReportDataSet);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTBL_InventoryConsumptionDrillReportDataSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InventoryConsumptionDetailDrillReportDataSet ds = new InventoryConsumptionDetailDrillReportDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TBL_InventoryConsumptionDrillReportDataSetRowChangeEventHandler(object sender, TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBL_InventoryConsumptionDrillReportDataSetDataTable : global::System.Data.TypedTableBase<TBL_InventoryConsumptionDrillReportDataSetRow> {
            
            private global::System.Data.DataColumn columnGroupDescription;
            
            private global::System.Data.DataColumn columnMarchandiseGroupCode;
            
            private global::System.Data.DataColumn columnMerchantiseDepartmentName;
            
            private global::System.Data.DataColumn columnMerchantiseDepartmentCode;
            
            private global::System.Data.DataColumn columnMerchantiseCategoryName;
            
            private global::System.Data.DataColumn columnMerchantiseCategoryCode;
            
            private global::System.Data.DataColumn columnMarchandiseSubCatgoryName;
            
            private global::System.Data.DataColumn columnMarchandiseSubCatgoryCode;
            
            private global::System.Data.DataColumn columnMarchandiseBaseCatgoryName;
            
            private global::System.Data.DataColumn columnMarchandiseBaseCatgoryCode;
            
            private global::System.Data.DataColumn columnItemNumber;
            
            private global::System.Data.DataColumn columnItemDescription;
            
            private global::System.Data.DataColumn columnConsumptionQuantity;
            
            private global::System.Data.DataColumn columnConsumptionBaseQuantity;
            
            private global::System.Data.DataColumn columnConsumptionAmount;
            
            private global::System.Data.DataColumn columnWastageQuantity;
            
            private global::System.Data.DataColumn columnWastageBaseQuantity;
            
            private global::System.Data.DataColumn columnWastageAmount;
            
            private global::System.Data.DataColumn columnTransactionDateTime;
            
            private global::System.Data.DataColumn columnBaseUOM;
            
            private global::System.Data.DataColumn columnConsumptionUOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetDataTable() {
                this.TableName = "TBL_InventoryConsumptionDrillReportDataSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TBL_InventoryConsumptionDrillReportDataSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TBL_InventoryConsumptionDrillReportDataSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GroupDescriptionColumn {
                get {
                    return this.columnGroupDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarchandiseGroupCodeColumn {
                get {
                    return this.columnMarchandiseGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MerchantiseDepartmentNameColumn {
                get {
                    return this.columnMerchantiseDepartmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MerchantiseDepartmentCodeColumn {
                get {
                    return this.columnMerchantiseDepartmentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MerchantiseCategoryNameColumn {
                get {
                    return this.columnMerchantiseCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MerchantiseCategoryCodeColumn {
                get {
                    return this.columnMerchantiseCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarchandiseSubCatgoryNameColumn {
                get {
                    return this.columnMarchandiseSubCatgoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarchandiseSubCatgoryCodeColumn {
                get {
                    return this.columnMarchandiseSubCatgoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarchandiseBaseCatgoryNameColumn {
                get {
                    return this.columnMarchandiseBaseCatgoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarchandiseBaseCatgoryCodeColumn {
                get {
                    return this.columnMarchandiseBaseCatgoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNumberColumn {
                get {
                    return this.columnItemNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDescriptionColumn {
                get {
                    return this.columnItemDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumptionQuantityColumn {
                get {
                    return this.columnConsumptionQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumptionBaseQuantityColumn {
                get {
                    return this.columnConsumptionBaseQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumptionAmountColumn {
                get {
                    return this.columnConsumptionAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WastageQuantityColumn {
                get {
                    return this.columnWastageQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WastageBaseQuantityColumn {
                get {
                    return this.columnWastageBaseQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WastageAmountColumn {
                get {
                    return this.columnWastageAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionDateTimeColumn {
                get {
                    return this.columnTransactionDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseUOMColumn {
                get {
                    return this.columnBaseUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumptionUOMColumn {
                get {
                    return this.columnConsumptionUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetRow this[int index] {
                get {
                    return ((TBL_InventoryConsumptionDrillReportDataSetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TBL_InventoryConsumptionDrillReportDataSetRowChangeEventHandler TBL_InventoryConsumptionDrillReportDataSetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TBL_InventoryConsumptionDrillReportDataSetRowChangeEventHandler TBL_InventoryConsumptionDrillReportDataSetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TBL_InventoryConsumptionDrillReportDataSetRowChangeEventHandler TBL_InventoryConsumptionDrillReportDataSetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TBL_InventoryConsumptionDrillReportDataSetRowChangeEventHandler TBL_InventoryConsumptionDrillReportDataSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTBL_InventoryConsumptionDrillReportDataSetRow(TBL_InventoryConsumptionDrillReportDataSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetRow AddTBL_InventoryConsumptionDrillReportDataSetRow(
                        string GroupDescription, 
                        string MarchandiseGroupCode, 
                        string MerchantiseDepartmentName, 
                        string MerchantiseDepartmentCode, 
                        string MerchantiseCategoryName, 
                        string MerchantiseCategoryCode, 
                        string MarchandiseSubCatgoryName, 
                        string MarchandiseSubCatgoryCode, 
                        string MarchandiseBaseCatgoryName, 
                        string MarchandiseBaseCatgoryCode, 
                        int ItemNumber, 
                        string ItemDescription, 
                        decimal ConsumptionQuantity, 
                        decimal ConsumptionBaseQuantity, 
                        decimal ConsumptionAmount, 
                        decimal WastageQuantity, 
                        decimal WastageBaseQuantity, 
                        decimal WastageAmount, 
                        string TransactionDateTime, 
                        string BaseUOM, 
                        string ConsumptionUOM) {
                TBL_InventoryConsumptionDrillReportDataSetRow rowTBL_InventoryConsumptionDrillReportDataSetRow = ((TBL_InventoryConsumptionDrillReportDataSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GroupDescription,
                        MarchandiseGroupCode,
                        MerchantiseDepartmentName,
                        MerchantiseDepartmentCode,
                        MerchantiseCategoryName,
                        MerchantiseCategoryCode,
                        MarchandiseSubCatgoryName,
                        MarchandiseSubCatgoryCode,
                        MarchandiseBaseCatgoryName,
                        MarchandiseBaseCatgoryCode,
                        ItemNumber,
                        ItemDescription,
                        ConsumptionQuantity,
                        ConsumptionBaseQuantity,
                        ConsumptionAmount,
                        WastageQuantity,
                        WastageBaseQuantity,
                        WastageAmount,
                        TransactionDateTime,
                        BaseUOM,
                        ConsumptionUOM};
                rowTBL_InventoryConsumptionDrillReportDataSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBL_InventoryConsumptionDrillReportDataSetRow);
                return rowTBL_InventoryConsumptionDrillReportDataSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBL_InventoryConsumptionDrillReportDataSetDataTable cln = ((TBL_InventoryConsumptionDrillReportDataSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBL_InventoryConsumptionDrillReportDataSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGroupDescription = base.Columns["GroupDescription"];
                this.columnMarchandiseGroupCode = base.Columns["MarchandiseGroupCode"];
                this.columnMerchantiseDepartmentName = base.Columns["MerchantiseDepartmentName"];
                this.columnMerchantiseDepartmentCode = base.Columns["MerchantiseDepartmentCode"];
                this.columnMerchantiseCategoryName = base.Columns["MerchantiseCategoryName"];
                this.columnMerchantiseCategoryCode = base.Columns["MerchantiseCategoryCode"];
                this.columnMarchandiseSubCatgoryName = base.Columns["MarchandiseSubCatgoryName"];
                this.columnMarchandiseSubCatgoryCode = base.Columns["MarchandiseSubCatgoryCode"];
                this.columnMarchandiseBaseCatgoryName = base.Columns["MarchandiseBaseCatgoryName"];
                this.columnMarchandiseBaseCatgoryCode = base.Columns["MarchandiseBaseCatgoryCode"];
                this.columnItemNumber = base.Columns["ItemNumber"];
                this.columnItemDescription = base.Columns["ItemDescription"];
                this.columnConsumptionQuantity = base.Columns["ConsumptionQuantity"];
                this.columnConsumptionBaseQuantity = base.Columns["ConsumptionBaseQuantity"];
                this.columnConsumptionAmount = base.Columns["ConsumptionAmount"];
                this.columnWastageQuantity = base.Columns["WastageQuantity"];
                this.columnWastageBaseQuantity = base.Columns["WastageBaseQuantity"];
                this.columnWastageAmount = base.Columns["WastageAmount"];
                this.columnTransactionDateTime = base.Columns["TransactionDateTime"];
                this.columnBaseUOM = base.Columns["BaseUOM"];
                this.columnConsumptionUOM = base.Columns["ConsumptionUOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGroupDescription = new global::System.Data.DataColumn("GroupDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupDescription);
                this.columnMarchandiseGroupCode = new global::System.Data.DataColumn("MarchandiseGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchandiseGroupCode);
                this.columnMerchantiseDepartmentName = new global::System.Data.DataColumn("MerchantiseDepartmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerchantiseDepartmentName);
                this.columnMerchantiseDepartmentCode = new global::System.Data.DataColumn("MerchantiseDepartmentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerchantiseDepartmentCode);
                this.columnMerchantiseCategoryName = new global::System.Data.DataColumn("MerchantiseCategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerchantiseCategoryName);
                this.columnMerchantiseCategoryCode = new global::System.Data.DataColumn("MerchantiseCategoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerchantiseCategoryCode);
                this.columnMarchandiseSubCatgoryName = new global::System.Data.DataColumn("MarchandiseSubCatgoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchandiseSubCatgoryName);
                this.columnMarchandiseSubCatgoryCode = new global::System.Data.DataColumn("MarchandiseSubCatgoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchandiseSubCatgoryCode);
                this.columnMarchandiseBaseCatgoryName = new global::System.Data.DataColumn("MarchandiseBaseCatgoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchandiseBaseCatgoryName);
                this.columnMarchandiseBaseCatgoryCode = new global::System.Data.DataColumn("MarchandiseBaseCatgoryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarchandiseBaseCatgoryCode);
                this.columnItemNumber = new global::System.Data.DataColumn("ItemNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNumber);
                this.columnItemDescription = new global::System.Data.DataColumn("ItemDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDescription);
                this.columnConsumptionQuantity = new global::System.Data.DataColumn("ConsumptionQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumptionQuantity);
                this.columnConsumptionBaseQuantity = new global::System.Data.DataColumn("ConsumptionBaseQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumptionBaseQuantity);
                this.columnConsumptionAmount = new global::System.Data.DataColumn("ConsumptionAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumptionAmount);
                this.columnWastageQuantity = new global::System.Data.DataColumn("WastageQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWastageQuantity);
                this.columnWastageBaseQuantity = new global::System.Data.DataColumn("WastageBaseQuantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWastageBaseQuantity);
                this.columnWastageAmount = new global::System.Data.DataColumn("WastageAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWastageAmount);
                this.columnTransactionDateTime = new global::System.Data.DataColumn("TransactionDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDateTime);
                this.columnBaseUOM = new global::System.Data.DataColumn("BaseUOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseUOM);
                this.columnConsumptionUOM = new global::System.Data.DataColumn("ConsumptionUOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumptionUOM);
                this.columnGroupDescription.MaxLength = 200;
                this.columnMarchandiseGroupCode.MaxLength = 50;
                this.columnMerchantiseDepartmentName.MaxLength = 200;
                this.columnMerchantiseDepartmentCode.MaxLength = 50;
                this.columnMerchantiseCategoryName.MaxLength = 200;
                this.columnMerchantiseCategoryCode.MaxLength = 50;
                this.columnMarchandiseSubCatgoryName.MaxLength = 200;
                this.columnMarchandiseSubCatgoryCode.MaxLength = 50;
                this.columnMarchandiseBaseCatgoryName.MaxLength = 200;
                this.columnMarchandiseBaseCatgoryCode.MaxLength = 50;
                this.columnItemDescription.MaxLength = 200;
                this.columnTransactionDateTime.MaxLength = 30;
                this.columnBaseUOM.MaxLength = 20;
                this.columnConsumptionUOM.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetRow NewTBL_InventoryConsumptionDrillReportDataSetRow() {
                return ((TBL_InventoryConsumptionDrillReportDataSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBL_InventoryConsumptionDrillReportDataSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBL_InventoryConsumptionDrillReportDataSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBL_InventoryConsumptionDrillReportDataSetRowChanged != null)) {
                    this.TBL_InventoryConsumptionDrillReportDataSetRowChanged(this, new TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent(((TBL_InventoryConsumptionDrillReportDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBL_InventoryConsumptionDrillReportDataSetRowChanging != null)) {
                    this.TBL_InventoryConsumptionDrillReportDataSetRowChanging(this, new TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent(((TBL_InventoryConsumptionDrillReportDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBL_InventoryConsumptionDrillReportDataSetRowDeleted != null)) {
                    this.TBL_InventoryConsumptionDrillReportDataSetRowDeleted(this, new TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent(((TBL_InventoryConsumptionDrillReportDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBL_InventoryConsumptionDrillReportDataSetRowDeleting != null)) {
                    this.TBL_InventoryConsumptionDrillReportDataSetRowDeleting(this, new TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent(((TBL_InventoryConsumptionDrillReportDataSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTBL_InventoryConsumptionDrillReportDataSetRow(TBL_InventoryConsumptionDrillReportDataSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InventoryConsumptionDetailDrillReportDataSet ds = new InventoryConsumptionDetailDrillReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBL_InventoryConsumptionDrillReportDataSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBL_InventoryConsumptionDrillReportDataSetRow : global::System.Data.DataRow {
            
            private TBL_InventoryConsumptionDrillReportDataSetDataTable tableTBL_InventoryConsumptionDrillReportDataSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TBL_InventoryConsumptionDrillReportDataSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBL_InventoryConsumptionDrillReportDataSet = ((TBL_InventoryConsumptionDrillReportDataSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GroupDescription {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.GroupDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupDescription\' in table \'TBL_InventoryConsumptionDrillRe" +
                                "portDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.GroupDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarchandiseGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchandiseGroupCode\' in table \'TBL_InventoryConsumptionDri" +
                                "llReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MerchantiseDepartmentName {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MerchantiseDepartmentName\' in table \'TBL_InventoryConsumpti" +
                                "onDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MerchantiseDepartmentCode {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MerchantiseDepartmentCode\' in table \'TBL_InventoryConsumpti" +
                                "onDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MerchantiseCategoryName {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MerchantiseCategoryName\' in table \'TBL_InventoryConsumption" +
                                "DrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MerchantiseCategoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MerchantiseCategoryCode\' in table \'TBL_InventoryConsumption" +
                                "DrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarchandiseSubCatgoryName {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchandiseSubCatgoryName\' in table \'TBL_InventoryConsumpti" +
                                "onDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarchandiseSubCatgoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchandiseSubCatgoryCode\' in table \'TBL_InventoryConsumpti" +
                                "onDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarchandiseBaseCatgoryName {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchandiseBaseCatgoryName\' in table \'TBL_InventoryConsumpt" +
                                "ionDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarchandiseBaseCatgoryCode {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarchandiseBaseCatgoryCode\' in table \'TBL_InventoryConsumpt" +
                                "ionDrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemNumber {
                get {
                    try {
                        return ((int)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNumber\' in table \'TBL_InventoryConsumptionDrillReportDa" +
                                "taSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDescription {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDescription\' in table \'TBL_InventoryConsumptionDrillRep" +
                                "ortDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConsumptionQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumptionQuantity\' in table \'TBL_InventoryConsumptionDril" +
                                "lReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConsumptionBaseQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionBaseQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumptionBaseQuantity\' in table \'TBL_InventoryConsumption" +
                                "DrillReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionBaseQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConsumptionAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumptionAmount\' in table \'TBL_InventoryConsumptionDrillR" +
                                "eportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WastageQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WastageQuantity\' in table \'TBL_InventoryConsumptionDrillRep" +
                                "ortDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WastageBaseQuantity {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageBaseQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WastageBaseQuantity\' in table \'TBL_InventoryConsumptionDril" +
                                "lReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageBaseQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WastageAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WastageAmount\' in table \'TBL_InventoryConsumptionDrillRepor" +
                                "tDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransactionDateTime {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.TransactionDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDateTime\' in table \'TBL_InventoryConsumptionDril" +
                                "lReportDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.TransactionDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BaseUOM {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.BaseUOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseUOM\' in table \'TBL_InventoryConsumptionDrillReportDataS" +
                                "et\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.BaseUOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConsumptionUOM {
                get {
                    try {
                        return ((string)(this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionUOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumptionUOM\' in table \'TBL_InventoryConsumptionDrillRepo" +
                                "rtDataSet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionUOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGroupDescriptionNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.GroupDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGroupDescriptionNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.GroupDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarchandiseGroupCodeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarchandiseGroupCodeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMerchantiseDepartmentNameNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMerchantiseDepartmentNameNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMerchantiseDepartmentCodeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMerchantiseDepartmentCodeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseDepartmentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMerchantiseCategoryNameNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMerchantiseCategoryNameNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMerchantiseCategoryCodeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMerchantiseCategoryCodeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MerchantiseCategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarchandiseSubCatgoryNameNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarchandiseSubCatgoryNameNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarchandiseSubCatgoryCodeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarchandiseSubCatgoryCodeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseSubCatgoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarchandiseBaseCatgoryNameNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarchandiseBaseCatgoryNameNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarchandiseBaseCatgoryCodeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarchandiseBaseCatgoryCodeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.MarchandiseBaseCatgoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNumberNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNumberNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDescriptionNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDescriptionNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ItemDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsumptionQuantityNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsumptionQuantityNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsumptionBaseQuantityNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionBaseQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsumptionBaseQuantityNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionBaseQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsumptionAmountNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsumptionAmountNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWastageQuantityNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWastageQuantityNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWastageBaseQuantityNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageBaseQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWastageBaseQuantityNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageBaseQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWastageAmountNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWastageAmountNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.WastageAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionDateTimeNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.TransactionDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionDateTimeNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.TransactionDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseUOMNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.BaseUOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseUOMNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.BaseUOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsumptionUOMNull() {
                return this.IsNull(this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionUOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsumptionUOMNull() {
                this[this.tableTBL_InventoryConsumptionDrillReportDataSet.ConsumptionUOMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent : global::System.EventArgs {
            
            private TBL_InventoryConsumptionDrillReportDataSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetRowChangeEvent(TBL_InventoryConsumptionDrillReportDataSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TBL_InventoryConsumptionDrillReportDataSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AMS.Web.UI.InventoryConsumptionDetailDrillReportDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBL_InventoryConsumptionDrillReportDataSetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TBL_InventoryConsumptionDrillReportDataSetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBL_InventoryConsumptionDrillReportDataSet";
            tableMapping.ColumnMappings.Add("GroupDescription", "GroupDescription");
            tableMapping.ColumnMappings.Add("MarchandiseGroupCode", "MarchandiseGroupCode");
            tableMapping.ColumnMappings.Add("MerchantiseDepartmentName", "MerchantiseDepartmentName");
            tableMapping.ColumnMappings.Add("MerchantiseDepartmentCode", "MerchantiseDepartmentCode");
            tableMapping.ColumnMappings.Add("MerchantiseCategoryName", "MerchantiseCategoryName");
            tableMapping.ColumnMappings.Add("MerchantiseCategoryCode", "MerchantiseCategoryCode");
            tableMapping.ColumnMappings.Add("MarchandiseSubCatgoryName", "MarchandiseSubCatgoryName");
            tableMapping.ColumnMappings.Add("MarchandiseSubCatgoryCode", "MarchandiseSubCatgoryCode");
            tableMapping.ColumnMappings.Add("MarchandiseBaseCatgoryName", "MarchandiseBaseCatgoryName");
            tableMapping.ColumnMappings.Add("MarchandiseBaseCatgoryCode", "MarchandiseBaseCatgoryCode");
            tableMapping.ColumnMappings.Add("ItemNumber", "ItemNumber");
            tableMapping.ColumnMappings.Add("ItemDescription", "ItemDescription");
            tableMapping.ColumnMappings.Add("ConsumptionQuantity", "ConsumptionQuantity");
            tableMapping.ColumnMappings.Add("ConsumptionBaseQuantity", "ConsumptionBaseQuantity");
            tableMapping.ColumnMappings.Add("ConsumptionAmount", "ConsumptionAmount");
            tableMapping.ColumnMappings.Add("WastageQuantity", "WastageQuantity");
            tableMapping.ColumnMappings.Add("WastageBaseQuantity", "WastageBaseQuantity");
            tableMapping.ColumnMappings.Add("WastageAmount", "WastageAmount");
            tableMapping.ColumnMappings.Add("TransactionDateTime", "TransactionDateTime");
            tableMapping.ColumnMappings.Add("BaseUOM", "BaseUOM");
            tableMapping.ColumnMappings.Add("ConsumptionUOM", "ConsumptionUOM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TBL_InventoryConsumptionDrillReportDataSet] ([GroupDescription], [MarchandiseGroupCode], [MerchantiseDepartmentName], [MerchantiseDepartmentCode], [MerchantiseCategoryName], [MerchantiseCategoryCode], [MarchandiseSubCatgoryName], [MarchandiseSubCatgoryCode], [MarchandiseBaseCatgoryName], [MarchandiseBaseCatgoryCode], [ItemNumber], [ItemDescription], [ConsumptionQuantity], [ConsumptionBaseQuantity], [ConsumptionAmount], [WastageQuantity], [WastageBaseQuantity], [WastageAmount], [TransactionDateTime], [BaseUOM], [ConsumptionUOM]) VALUES (@GroupDescription, @MarchandiseGroupCode, @MerchantiseDepartmentName, @MerchantiseDepartmentCode, @MerchantiseCategoryName, @MerchantiseCategoryCode, @MarchandiseSubCatgoryName, @MarchandiseSubCatgoryCode, @MarchandiseBaseCatgoryName, @MarchandiseBaseCatgoryCode, @ItemNumber, @ItemDescription, @ConsumptionQuantity, @ConsumptionBaseQuantity, @ConsumptionAmount, @WastageQuantity, @WastageBaseQuantity, @WastageAmount, @TransactionDateTime, @BaseUOM, @ConsumptionUOM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GroupDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GroupDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarchandiseGroupCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarchandiseGroupCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MerchantiseDepartmentName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MerchantiseDepartmentName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MerchantiseDepartmentCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MerchantiseDepartmentCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MerchantiseCategoryName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MerchantiseCategoryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MerchantiseCategoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MerchantiseCategoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarchandiseSubCatgoryName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarchandiseSubCatgoryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarchandiseSubCatgoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarchandiseSubCatgoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarchandiseBaseCatgoryName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarchandiseBaseCatgoryName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarchandiseBaseCatgoryCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarchandiseBaseCatgoryCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumptionQuantity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "ConsumptionQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumptionBaseQuantity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "ConsumptionBaseQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumptionAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "ConsumptionAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WastageQuantity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "WastageQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WastageBaseQuantity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "WastageBaseQuantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WastageAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "WastageAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionDateTime", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseUOM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseUOM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumptionUOM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumptionUOM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=bhumatisrv;Initial Catalog=DeveloperDB;Persist Security Info=True;Use" +
                "r ID=sa;Password=P@$$w0rd";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT GroupDescription, MarchandiseGroupCode, MerchantiseDepartmentName, MerchantiseDepartmentCode, MerchantiseCategoryName, MerchantiseCategoryCode, MarchandiseSubCatgoryName, MarchandiseSubCatgoryCode, MarchandiseBaseCatgoryName, MarchandiseBaseCatgoryCode, ItemNumber, ItemDescription, ConsumptionQuantity, ConsumptionBaseQuantity, ConsumptionAmount, WastageQuantity, WastageBaseQuantity, WastageAmount, TransactionDateTime, BaseUOM, ConsumptionUOM FROM dbo.TBL_InventoryConsumptionDrillReportDataSet";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InventoryConsumptionDetailDrillReportDataSet.TBL_InventoryConsumptionDrillReportDataSetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InventoryConsumptionDetailDrillReportDataSet.TBL_InventoryConsumptionDrillReportDataSetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InventoryConsumptionDetailDrillReportDataSet.TBL_InventoryConsumptionDrillReportDataSetDataTable dataTable = new InventoryConsumptionDetailDrillReportDataSet.TBL_InventoryConsumptionDrillReportDataSetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InventoryConsumptionDetailDrillReportDataSet.TBL_InventoryConsumptionDrillReportDataSetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InventoryConsumptionDetailDrillReportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TBL_InventoryConsumptionDrillReportDataSet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string GroupDescription, 
                    string MarchandiseGroupCode, 
                    string MerchantiseDepartmentName, 
                    string MerchantiseDepartmentCode, 
                    string MerchantiseCategoryName, 
                    string MerchantiseCategoryCode, 
                    string MarchandiseSubCatgoryName, 
                    string MarchandiseSubCatgoryCode, 
                    string MarchandiseBaseCatgoryName, 
                    string MarchandiseBaseCatgoryCode, 
                    global::System.Nullable<int> ItemNumber, 
                    string ItemDescription, 
                    global::System.Nullable<decimal> ConsumptionQuantity, 
                    global::System.Nullable<decimal> ConsumptionBaseQuantity, 
                    global::System.Nullable<decimal> ConsumptionAmount, 
                    global::System.Nullable<decimal> WastageQuantity, 
                    global::System.Nullable<decimal> WastageBaseQuantity, 
                    global::System.Nullable<decimal> WastageAmount, 
                    string TransactionDateTime, 
                    string BaseUOM, 
                    string ConsumptionUOM) {
            if ((GroupDescription == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GroupDescription));
            }
            if ((MarchandiseGroupCode == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MarchandiseGroupCode));
            }
            if ((MerchantiseDepartmentName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MerchantiseDepartmentName));
            }
            if ((MerchantiseDepartmentCode == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MerchantiseDepartmentCode));
            }
            if ((MerchantiseCategoryName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MerchantiseCategoryName));
            }
            if ((MerchantiseCategoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MerchantiseCategoryCode));
            }
            if ((MarchandiseSubCatgoryName == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MarchandiseSubCatgoryName));
            }
            if ((MarchandiseSubCatgoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MarchandiseSubCatgoryCode));
            }
            if ((MarchandiseBaseCatgoryName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MarchandiseBaseCatgoryName));
            }
            if ((MarchandiseBaseCatgoryCode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(MarchandiseBaseCatgoryCode));
            }
            if ((ItemNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ItemNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ItemDescription == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ItemDescription));
            }
            if ((ConsumptionQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ConsumptionQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ConsumptionBaseQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ConsumptionBaseQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ConsumptionAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(ConsumptionAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((WastageQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(WastageQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((WastageBaseQuantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(WastageBaseQuantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((WastageAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(WastageAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((TransactionDateTime == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(TransactionDateTime));
            }
            if ((BaseUOM == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(BaseUOM));
            }
            if ((ConsumptionUOM == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ConsumptionUOM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TBL_InventoryConsumptionDrillReportDataSetTableAdapter _tBL_InventoryConsumptionDrillReportDataSetTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBL_InventoryConsumptionDrillReportDataSetTableAdapter TBL_InventoryConsumptionDrillReportDataSetTableAdapter {
            get {
                return this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter;
            }
            set {
                this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null) 
                            && (this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection != null))) {
                    return this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(InventoryConsumptionDetailDrillReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBL_InventoryConsumptionDrillReportDataSet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(InventoryConsumptionDetailDrillReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBL_InventoryConsumptionDrillReportDataSet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(InventoryConsumptionDetailDrillReportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBL_InventoryConsumptionDrillReportDataSet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(InventoryConsumptionDetailDrillReportDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                    revertConnections.Add(this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter, this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection);
                    this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter != null)) {
                    this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter]));
                    this._tBL_InventoryConsumptionDrillReportDataSetTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591