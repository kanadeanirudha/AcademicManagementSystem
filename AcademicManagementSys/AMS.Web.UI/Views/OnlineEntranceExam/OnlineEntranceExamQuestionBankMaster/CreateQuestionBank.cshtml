@model AMS.ViewModel.OnlineEntranceExamQuestionBankMasterViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jquery-ui.theme.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("Content/admin/jquery-ui-1.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/ImageArea.css")" rel="stylesheet" />
<script src="~/Scripts/jquery.imgareaselect.-1.0.0.js"></script>

<style>
    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            z-index: 1;
            background-color: #faa732;
            background-image: linear-gradient(to bottom, #fbb450, #f89406);
            background-repeat: repeat-x;
            border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
            color: #ffffff;
            text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
            border-image: none;
            border-radius: 4px;
            border-style: solid;
            border-width: 1px;
            box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 1px 2px rgba(0, 0, 0, 0.05);
            cursor: pointer;
            display: inline-block;
            font-size: 14px;
            width: 185px;
        }
</style>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">Create Online Exam Question Bank </h5>
    </div>
    <div class="widget-content" style="height: 500px">
        <div id="DivSuccessMessage" style="display: none; color: #000; margin-bottom: 0px;" class="alert"></div>
        <form id="FormCreateOnlineEntranceExamQuestionBankMaster" method="post" class="form-horizontal well">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.X)
            @Html.HiddenFor(model => model.Y)
            @Html.HiddenFor(model => model.Width)
            @Html.HiddenFor(model => model.Height)
            @Html.HiddenFor(model => model.Flickr)
            @Html.HiddenFor(m => m.OnlineExamQuestionBankMasterID)
           

            <div class="row">
                <div class="span10">
                    <div class="row control-group">

                        <div class="spanFullName span2" style="padding-left: 15px;">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.GenQuestionTypeID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(model => model.GeneralQuestionTypeID, Model.QuestionTypeListMasterItem, "-----Select question type-----", new { id = "GeneralQuestionTypeID", @class = "form-control chosen-select", style = "font-weight:bold" })
                        </div>

                        <div class="spanFullName span2">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.GeneralQuestionLevelID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(model => model.GeneralQuestionLevelID, Model.ListQuestionLevelMasterItems, "-----Select question level-----", new { id = "GeneralQuestionLevelID", @class = "form-control chosen-select", style = "font-weight:bold; margin-left:60%; margin-top:-13%;" })
                        </div>                        
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="span10">
                    <div class="row control-group">

                        <div class="spanFullName span2" style="padding-left: 15px;">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.SyllabusGroupDetail, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(model => model.SyllabusGroupDetail, Model.ListSyllabusGroupUnitItem, "-----Select unit-----", new { id = "SyllabusGroupDetail", @class = "form-control chosen-select", style = "font-weight:bold" })
                        </div>

                        <div class="spanFullName span2">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.SyllabusTopicGroupID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(model => model.SyllabusTopicGroupID, Model.ListSyllabusGroupTopicItems, "-----Select topic-----", new { id = "SyllabusTopicGroupID", @class = "form-control chosen-select", style = "font-weight:bold; margin-left:60%; margin-top:-13%;" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="span10">
                    <div class="row control-group">

                        <div class="spanFullName span2" style="padding-left: 15px;">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.IsQuestionInImage, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.CheckBoxFor(m => m.IsQuestionInImage)
                        </div>

                        <div class="spanFullName span2">                            
                        </div>
                        <div class="span3">                           
                        </div>                       
                    </div>
                </div>
            </div>

            <div class="row" id="DivQuestionLableText">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName span2" style="padding-left: 15px;">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.QuestionLableText, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span6">
                            @Html.TextAreaFor(model => model.QuestionLableText, new { @class = "txtbox", style = "font-Weight:Bold; width:123%;" })
                            <br />
                            @Html.ValidationMessageFor(model => model.QuestionLableText)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" id="DivQuestionImage" style="display: none">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName span2" style="padding-left: 15px;">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.ImageName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span6">
                            <div style="height: 80px; width: 118%; border: 1px solid #ccc; background-color: #FFF; border-radius: 3px;">
                                <span class="btn-file" style="" id="questionImage">
                                    <img style="height: 80px; width: 100%;" id="previewQuestionImage" />
                                    @Html.FileFor(model => model.QuestionImageFile)
                                    <br />
                                    @Html.ValidationMessageFor(model => model.QuestionImageFile)
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <hr style="margin: 0px" />
            <div><h6>Option Details </h6></div>
            <div id="DisplayMessage" style="display:none;color:#000;" class="alert"></div>
            <br />
            <div class="row">
                <div class="span9">
                    <div class="row control-group" style="margin-left:1%;">
                        <div class="span" style="margin-left:0%;">
                            @Html.LabelFor(model => model.IsOptionInImage, new { Style = "font-size: 100%;font-weight:bold;" })
                            @Html.CheckBoxFor(model => model.IsOptionInImage, new { style = "margin-left:38%;" })
                        </div><div class="span">
                        </div><div class="span">
                        </div>
                        <div class="span6" id="DivOptionText">
                            @Html.LabelFor(model => model.OptionText, new { Style = "font-size: 100%;font-weight:bold ;" })
                            @Html.TextBoxFor(model => model.OptionText, new { @class = "txtbox", style = "width:100%;font-weight:bold" })
                        </div>
                        <div class="span6" id="DivOptionImage" style="display: none;">
                            @Html.LabelFor(model => model.OptionImage, new { Style = "font-size: 100%;font-weight:bold ;" })
                            @Html.FileFor(model => model.OptionImageFile)
                        </div>
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.IsAnswer, new { Style = "font-size: 100%;font-weight:bold;" })
                            @Html.CheckBoxFor(model => model.IsAnswer, new { style = "margin-left:38%;" })
                        </div>
                        <div class="spanFullName">
                            <label for="input01">&nbsp;</label>
                            <input type="button" id="addItem" class="btn btn-primary" style="height: 28px; width: 125%;" value="Add" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="span9">
                    <div id="DivAddRowTable" style="height: auto; width: 109%; overflow:auto;">
                        <table id="tblData" class="table user-tbl " style="border: 1px solid #dddddd">
                            <thead>
                                <tr>
                                    <th style="text-align: left; width: 15%; text-transform:none;font-size:96%">Is Image</th>
                                    <th style="text-align: center; width: 65% ; text-transform:none;font-size:96%">Option</th>
                                    <th style="text-align: left; width: 10% ; text-transform:none;font-size:96%">Answer</th>
                                    <th style="text-align: center; width: 10%; text-transform:none;font-size:96%">Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>

            </div>

            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right; margin-bottom: 0;">
                <button type="button" id="CreateOnlineExamQuestionBankRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                @*<input name="" id="reset" type="submit" class="btn btn-secondary" value="@Resources.ButtonAction_Reset" />*@
            </div>

        </form>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        OnlineEntranceExamQuestionBankMaster.Initialize();
        var boxes = $('#aaa').attr('disabled', true);

        //What happens if the File changes?
        $('#QuestionImageFile').change(function (evt) {

            var f = evt.target.files[0];
            var reader = new FileReader();
            var image = new Image();

            if (!f.type.match('image.*')) {
                alert("The selected file does not appear to be an image.");
                return;
            }
            var filename = "QuestionImageFile";
            var maxSize = ValidateFileUpload(filename);
            if (maxSize == 1) {
                alert("Maximum file size exceeds,Your Question Image size should be less than 50 kb");
                return;
            }
            else {
                setBox('#IsFile');
                reader.onload = function (e) { preview.attr('src', e.target.result); };
                reader.readAsDataURL(f);
            }
        });


        function ValidateFileUpload(fileName) {
            var fuData = document.getElementById(fileName);
            var FileUploadPath = fuData.value;


            if (FileUploadPath == '') {
                alert("Please upload an image");

            } else {
                var Extension = FileUploadPath.substring(FileUploadPath.lastIndexOf('.') + 1).toLowerCase();



                if (Extension == "gif" || Extension == "png" || Extension == "bmp"
                            || Extension == "jpeg" || Extension == "jpg") {


                    if (fuData.files && fuData.files[0]) {

                        var size = fuData.files[0].size;
                        //alert(size);

                        if (size > 50000) {
                            return 1;
                        } else {
                            var reader = new FileReader();

                            reader.onload = function (e) {
                                $('#blah').attr('src', e.target.result);
                            }

                            reader.readAsDataURL(fuData.files[0]);
                        }
                    }

                }
                else {
                    alert("Photo only allows file types of GIF, PNG, JPG, JPEG and BMP. ");
                }
            }
        }


        //Check one of the checkboxes
        var setBox = function (filter) {
            $('button').attr('disabled', false);
            boxes.attr('checked', false)
            .filter(filter).attr({ 'checked': true, 'disabled': false });
        };

        //What happens if any checkbox is checked ?!
        boxes.change(function () {
            setBox(this);
            $('#' + this.id.substr(2)).change();
        });

        var preview = $('#previewQuestionImage').load(function () {

            debugger;
            setPreview();
            ias.setOptions({
                x1: 0,
                y1: 0,
                x2: $(this).width(),
                y2: $(this).height(),
                show: true
            });
        });
        //Set the 4 coordinates for the cropping
        var setPreview = function (x, y, w, h) {
            $('#X').val(x || 0);
            $('#Y').val(y || 0);
            $('#Width').val(w || preview[0].naturalWidth);
            $('#Height').val(h || preview[0].naturalHeight);
        };
        var ias = preview.imgAreaSelect({
            handles: true,
            instance: true,
            parent: 'body',
            onSelectEnd: function (s, e) {
                var scale = preview[0].naturalWidth / preview.width();
                var _f = Math.floor;
                setPreview(_f(scale * e.x1), _f(scale * e.y1), _f(scale * e.width), _f(scale * e.height));
            }
        });

        //Fetch Flickr images
        var fetchImages = function (query) {
            $.getJSON('http://www.flickr.com/services/feeds/photos_public.gne?jsoncallback=?', {
                tags: query,
                tagmode: "any",
                format: "json"
            }, function (data) {
                var screen = $('<div />').addClass('waitScreen').click(function () {
                    $(this).remove();
                }).appendTo('body');
                var box = $('<div />').addClass('flickrImages').appendTo(screen);
                $.each(data.items, function (i, v) {
                    console.log(data.items[i]);
                    $('<img />').addClass('flickrImage').attr('src', data.items[i].media.m).click(function () {
                        $('#Flickr').val(this.src).change();
                        screen.remove();
                    }).appendTo(box);
                });
            });
        };

        //Flickr
        $('#FlickrQuery').change(function () {
            fetchImages(this.value);
        });

        $('#Flickr').change(function () {
            setBox('#IsFlickr');
            preview.attr('src', this.value);
        });

        //What happens if the URL changes?
        $('#Url').change(function () {
            setBox('#IsUrl');
            preview.attr('src', this.value);
        });
        //Initial state of X, Y, Width and Height is 0 0 1 1
        setPreview(0, 0, 1, 1);
    });
</script>
