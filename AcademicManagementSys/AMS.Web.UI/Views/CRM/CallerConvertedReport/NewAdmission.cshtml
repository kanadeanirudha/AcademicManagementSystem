@model AMS.ViewModel.CRMCallMasterAndDetailsViewModel
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<script src="@Url.Content("~/Scripts/AMS_Scripts/CRM/CRMCallMasterAndDetails.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style>
    .size {
        font-size: 12px;
    }
</style>


<div class="container">
    @Html.HiddenFor(m => Model.JobAllocationID)
    @Html.HiddenFor(m => Model.SelectedJobCallerStatus)
    @Html.HiddenFor(m => Model.JobID)
    @Html.HiddenFor(m => Model.CalleeLocationID)
    <div id="SuccessMessage" style="display: none; color: #000;" class="alert"></div>

    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Call Details</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-top: 0px">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <h2 class="m-b-10" style="border-bottom: 2px solid #eaeaea; font-size: 18px;">New Admission Details</h2>

            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group fg-line select">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>Title</label>
                        @Html.DropDownListFor(model => model.CalleeTitle, (SelectList)ViewBag.GeneralTitleMasterList, "--Select Title --", new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>First Name</label>
                        @Html.TextBoxFor(m => m.CalleeFirstName, new { @class = "form-control", placeholder = Resources.DisplayName_FirstName, maxlength = "20", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>Middle Name</label>
                           @if (Model.CalleeMiddelName == "placeholder = Resources.DisplayName_MiddleName")
                           {
                        @Html.TextBoxFor(m => m.CalleeMiddelName, new { @class = "form-control", placeholder = Resources.DisplayName_MiddleName, maxlength = "20", disabled = "disabled" })
                           }
                        else
                        {
                           @Html.TextBoxFor(m => m.CalleeMiddelName, new { @class = "form-control", disabled = "disabled" })   
                        }

                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>Last Name</label>
                        @Html.TextBoxFor(m => m.CalleeLastName, new { @class = "form-control", placeholder = Resources.DisplayName_LastName, maxlength = "20", disabled = "disabled" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeMobileNo)</label>
                        @Html.TextBoxFor(model => model.CalleeMobileNo, new { @class = "form-control", maxlength = "12", disabled = "disabled" })
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>@Html.LabelFor(model => model.CalleeEmailID)</label>
                        @Html.TextBoxFor(model => model.CalleeEmailID, new { @class = "form-control", maxlength = "50", disabled = "disabled" })
                    </div>
                    @Html.ValidationMessageFor(m => m.CalleeEmailID, "")
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeGender)</label><br />
                        `                   @if (Model.CalleeGender == "M")
                                            {
                            @Html.RadioButtonFor(model => model.CalleeGender, true, new { @checked = true, id = "Male", @disabled = "disabled" }) @Resources.DisplayName_Male
                            @Html.RadioButtonFor(model => model.CalleeGender, false, new { id = "Female", @disabled = "disabled" }) @Resources.DisplayName_Female
                                            }
                                            else
                                            {
                            @Html.RadioButtonFor(model => model.CalleeGender, true, new { id = "Male", @disabled = "disabled" })  @Resources.DisplayName_Male
                            @Html.RadioButtonFor(model => model.CalleeGender, false, new { @checked = true, id = "Female", @disabled = "disabled" }) @Resources.DisplayName_Female
                                            }

                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.Source)</label>
                        @Html.TextBoxFor(model => model.Source, new { @class = "form-control", maxlength = "50", @disabled = "disabled" })
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeLocation)</label>
                        @Html.TextBoxFor(model => model.CalleeLocation, new { @class = "form-control", maxlength = "50", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label>Title</label>
                        @Html.DropDownListFor(model => model.CalleeNationalityID, (SelectList)ViewBag.GeneralNationalityMaster, "--Select Nationality--", new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeOccupation)</label>
                        @Html.TextBoxFor(m => m.CalleeOccupation, new { @class = "form-control", MaxLength = "30", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeDesignation)</label>
                        @Html.TextBoxFor(m => m.CalleeDesignation, new { @class = "form-control", MaxLength = "30", disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeDepartment)</label>
                        @Html.TextBoxFor(m => m.CalleeDepartment, new { @class = "form-control", MaxLength = "30", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeExperience)</label>
                        @Html.TextBoxFor(m => m.CalleeExperience, new { @class = "form-control", MaxLength = "30", disabled = "disabled" })
                    </div>

                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>@Html.LabelFor(model => model.CalleeQualification)</label>
                        @Html.DropDownList("CalleeQualification", ViewData["CalleeQualification"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label>@Html.LabelFor(model => model.EnglishFluency)</label>
                        @Html.DropDownList("EnglishFluency", ViewData["EnglishFluency"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>@Html.LabelFor(model => model.CenterCode)</label>
                        @Html.DropDownListFor(model => model.CenterCode, (SelectList)ViewBag.StudyCentreList, "--Select Study Centre --", new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red;" class="hiddenMandetory">*</span>@Html.LabelFor(model => model.UniversityID)</label>
                        @Html.TextBoxFor(m => m.UniversityName, new { @class = "form-control size", MaxLength = "30", disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label>@Html.LabelFor(model => model.BranchDetailID)</label>
                        @Html.TextBoxFor(m => m.BranchDescription, new { @class = "form-control size", MaxLength = "30", disabled = "disabled" })
                        @*@Html.DropDownListFor(model => model.BranchDetailID, (SelectList)ViewBag.organisationBranchDetail, "--Select Course--", new { @class = "form-control size", disabled = "disabled" })*@
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label>@Html.LabelFor(model => model.StandardNumber)</label>
                        @Html.DropDownListFor(model => model.StandardNumber, (SelectList)ViewBag.OrganisationStandardMaster, "--Select Standard--", new { @class = "form-control size", disabled = "disabled" })
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label>@Html.LabelFor(model => model.AdmissionPattern)</label>
                        @Html.DropDownList("AdmissionPattern", ViewData["AdmissionPattern"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
            </div>

            <h2 class="m-b-10" style="border-bottom: 2px solid #eaeaea; font-size: 18px;">Call Feedback</h2>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.Interestlevel)</label>
                        @Html.DropDownList("Interestlevel", ViewData["Interestlevel"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        <label>@Html.LabelFor(model => model.CalleeInterestedProgram)</label>
                        @Html.TextBoxFor(m => m.CalleeInterestedProgram, new { @class = "form-control", MaxLength = "30", disabled = "disabled" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.ConcernArea)</label>
                        @Html.DropDownList("ConcernArea", ViewData["ConcernArea"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.CallerJobStatus)</label>
                        @Html.DropDownList("CallerJobStatus", ViewData["CallerJobStatus"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">


                    <div class="form-group fg-line select">
                        <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.CallStatus)</label>
                        @Html.DropDownList("CallStatus", ViewData["CallStatus"] as List<SelectListItem>, new { @class = "form-control size", disabled = "disabled" })

                    </div>
                </div>
            </div>
            @if (Model.CallerJobStatus == 2 && Model.CallStatus == 2)
            {
                <div class="row" id="DivNextCallDate">
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.NextCallDate)</label>
                            @Html.TextBoxFor(m => m.NextCallDate, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            <div class="select">
                                <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.CallTimeID)</label>
                                @Html.DropDownListFor(m => m.CallTimeID, Model.ListGeneralTimeSlotItems, "--Select Call Time--", new { @class = "form-control size", disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        <label><span style="color: red; font-weight: bold">*</span>@Html.LabelFor(model => model.CallerRemark)</label>
                        @Html.TextAreaFor(m => m.CallerRemark, new { @class = "form-control", MaxLength = "250", disabled = "disabled" })
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>



<style>
    .hiddenMandetory {
        display: none;
    }
</style>
