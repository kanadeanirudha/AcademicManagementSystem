
@*@model AMS.ViewModel.OrganisationSessionCryrAllocationViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (Model.OrgSessionCryrAllotStatus == false)
{
    <div class="widget-block" style="height: auto">
    <div class="widget-head">
        <h5>Update Set Active Section</h5>
    </div>
    <div class="widget-box">
        <form id="FormEditOrganisationSessionCryrAllocation" method="post" class="form-horizontal well">
            <fieldset>
                <legend style="display: none;"></legend>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.SessionID)
                @Html.HiddenFor(m => m.SemesterMasterID)
                @Html.HiddenFor(m => m.SemesterType)
                @Html.HiddenFor(m => m.CourseYearSemesterID)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.UniversityIDWithName)
                <div class="nonboxy-widget">
                    <div class="row">
                        <div class="span9">
                        </div>
                    </div>

                    <div class="row control-group">
                        <div class="span2" >
                            @Html.LabelFor(m => m.SessionName, new { @class = "", style = "font-weight:bold;margin-left:7px" })
                        </div>
                        <div class="span6" style="line-height: 25px">
                            <b>@Html.DisplayFor(model => model.SessionName) </b> 
                        </div>

                    </div>

                    <div class="row control-group">
                        <div class="span2">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>  
                             @Html.LabelFor(m => m.SemesterFromDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.SemesterFromDate, new { @class = "txtbox", ReadOnly = "True" })
                            <br />
                            @Html.ValidationMessageFor(m => m.SemesterFromDate)
                        </div>
                        <div class="span2" style="margin-left:50px">

                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                              @Html.LabelFor(m => m.SemesterUptoDate, new { @class = "", style = "font-weight:bold" })

                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.SemesterUptoDate, new { @class = "txtbox", ReadOnly = "True" })
                            <br />
                            @Html.ValidationMessageFor(m => m.SemesterUptoDate)
                        </div>
                    </div>


                    <div class="row control-group">
                        <div class="span2">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(m => m.PeriodStartDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">


                            @Html.TextBoxFor(model => model.PeriodStartDate, new { @class = "txtbox", ReadOnly = "True" })
                            <br />
                            @Html.ValidationMessageFor(m => m.PeriodStartDate)
                        </div>
                        <div class="span2" style="margin-left:50px">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(m => m.PeriodEndDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.PeriodEndDate, new { @class = "txtbox", ReadOnly = "True" })
                            <br />
                            @Html.ValidationMessageFor(m => m.PeriodEndDate)
                        </div>
                    </div>

                    <div class="row control-group">
                        <div class="span2" >
                            @Html.LabelFor(m => m.TotalExpectedWeeks, new { @class = "", style = "font-weight:bold;margin-left:7px" })
                        </div>
                        <div class="span2" style="line-height: 25px">
                            @Html.TextBoxFor(model => model.TotalExpectedWeeks, new { })
                            <br />
                            @Html.ValidationMessageFor(m => m.TotalExpectedWeeks)

                        </div>
                        <div class="span2" style="margin-left:50px">
                           
                            @Html.LabelFor(m => m.CurrentActiveSemesterFlag, new { @class = "", style = "font-weight:bold;margin-left:7px" })
                        </div>
                        <div class="span2" style="line-height: 25px">
                            @Html.CheckBoxFor(model => model.CurrentActiveSemesterFlag, new { })

                        </div>
                    </div>






                    <div class="form-actions" style="border: 1px solid #e5e5e5; text-align: right">
                        <input id="EditOrganisationSessionCryrAllocationRecord" type="button" value="@Resources.ButtonAction_Submit" class="btn btn-primary" style="width: 60px;" />
                    </div>
                </div>

            </fieldset>
        </form>
    </div>

</div>
}
else
{
        <div class="widget-block" style="height: auto">
    <div class="widget-head">
        <h5>View  Active Section</h5>
    </div>
    <div class="widget-box">
        <form id="FormEditOrganisationSessionCryrAllocation" method="post" class="form-horizontal well">
            <fieldset>
                <legend style="display: none;"></legend>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.SessionID)
                @Html.HiddenFor(m => m.SemesterMasterID)
                @Html.HiddenFor(m => m.SemesterType)
                @Html.HiddenFor(m => m.CourseYearSemesterID)
                <div class="nonboxy-widget">
                    <div class="row">
                        <div class="span9">
                        </div>
                    </div>

                    <div class="row control-group">
                        <div class="span2">
                            @Html.LabelFor(m => m.SessionName, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span6" style="line-height: 25px">
                            <b>@Html.DisplayFor(model => model.SessionName) </b>
                        </div>

                    </div>

                    <div class="row control-group">
                        <div class="span2">
                            @Html.LabelFor(m => m.SemesterFromDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.SemesterFromDate, new { @class = "txtbox",  disabled="disabled"})
                            <br />
                            @Html.ValidationMessageFor(m => m.SemesterFromDate)
                        </div>
                        <div class="span2" style="margin-left:50px">

                            @Html.LabelFor(m => m.SemesterUptoDate, new { @class = "", style = "font-weight:bold" })

                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.SemesterUptoDate, new { @class = "txtbox", disabled = "disabled" })
                            <br />
                            @Html.ValidationMessageFor(m => m.SemesterUptoDate)
                        </div>
                    </div>


                    <div class="row control-group">
                        <div class="span2">
                            @Html.LabelFor(m => m.PeriodStartDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">


                            @Html.TextBoxFor(model => model.PeriodStartDate, new { @class = "txtbox",disabled="disabled"})
                            <br />
                            @Html.ValidationMessageFor(m => m.PeriodStartDate)
                        </div>
                        <div class="span2" style="margin-left:50px">

                            @Html.LabelFor(m => m.PeriodEndDate, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">

                            @Html.TextBoxFor(model => model.PeriodEndDate, new { @class = "txtbox",  disabled="disabled"})
                            <br />
                            @Html.ValidationMessageFor(m => m.PeriodEndDate)
                        </div>
                    </div>

                    <div class="row control-group">
                        <div class="span2">
                            @Html.LabelFor(m => m.TotalExpectedWeeks, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">
                            @Html.TextBoxFor(model => model.TotalExpectedWeeks, new {disabled="disabled" })
                            <br />
                            @Html.ValidationMessageFor(m => m.TotalExpectedWeeks)

                        </div>
                        <div class="span2" style="margin-left:50px">

                            @Html.LabelFor(m => m.CurrentActiveSemesterFlag, new { @class = "", style = "font-weight:bold" })
                        </div>
                        <div class="span2" style="line-height: 25px">
                            @Html.CheckBoxFor(model => model.CurrentActiveSemesterFlag, new { disabled="disabled"})

                        </div>
                    </div>
                </div>

            </fieldset>
        </form>
    </div>

</div>
}

<script type="text/javascript">
    $(document).ready(function () {
        OrganisationSessionCryrAllocation.Initialize();

    });
</script>*@



@*------------new code-------------*@

@model AMS.ViewModel.OrganisationSessionCryrAllocationViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>

<div id="custom-content">
@if (Model.OrgSessionCryrAllotStatus == false) { 
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Update Set Active Section</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditOrganisationSessionCryrAllocation">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.SessionID)
                @Html.HiddenFor(m => m.SemesterMasterID)
                @Html.HiddenFor(m => m.SemesterType)
                @Html.HiddenFor(m => m.CourseYearSemesterID)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.UniversityIDWithName)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.SessionName, new { @class = "", style = "" })
                        <div class="form-group  fg-line">
                            <b>@Html.DisplayFor(model => model.SessionName) </b>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.SemesterFromDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.SemesterFromDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SemesterFromDate)
                    </div>

                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.SemesterUptoDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.SemesterUptoDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SemesterUptoDate)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.PeriodStartDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PeriodStartDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.PeriodStartDate)
                    </div>

                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.PeriodEndDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PeriodEndDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.PeriodEndDate)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.TotalExpectedWeeks, new { @class = "", style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.TotalExpectedWeeks, new { @class = "form-control", style = "background-color:#fff;", ReadOnly = "True" })
                        </div>
                        @Html.ValidationMessageFor(m => m.TotalExpectedWeeks)
                    </div>
                </div>



                <div class="form-group" style="margin-left: 2%; ">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="EditOrganisationSessionCryrAllocationRecord" type="button" />
                </div>
            </form>

        </div>
    </div>
    
    
}
else { 

    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Update Set Active Section</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.SessionID)
                @Html.HiddenFor(m => m.SemesterMasterID)
                @Html.HiddenFor(m => m.SemesterType)
                @Html.HiddenFor(m => m.CourseYearSemesterID)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.UniversityIDWithName)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(m => m.SessionName, new { @class = "", style = "" })
                        <div class="form-group  fg-line">
                            <b>@Html.DisplayFor(model => model.SessionName) </b>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.SemesterFromDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.SemesterFromDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;",disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SemesterFromDate)
                    </div>

                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.SemesterUptoDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.SemesterUptoDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.SemesterUptoDate)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.PeriodStartDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PeriodStartDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.PeriodStartDate)
                    </div>

                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.PeriodEndDate, new { @class = "", style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PeriodEndDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.PeriodEndDate)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(m => m.TotalExpectedWeeks, new { @class = "", style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.TotalExpectedWeeks, new { @class = "form-control", Value = "", style = "background-color:#fff;", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(m => m.TotalExpectedWeeks)
                    </div>
                </div>



                
            </form>

        </div>
    </div>

}
</div>
<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        OrganisationSessionCryrAllocation.Initialize();


    });
</script>




