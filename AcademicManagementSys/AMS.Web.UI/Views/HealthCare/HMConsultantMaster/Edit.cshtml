@model AMS.ViewModel.HMConsultantMasterViewModel

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Edit Consultant</h2>
    </div>
    <div class="card">
        @Html.HiddenFor(model => model.EmployeeID)
        @Html.HiddenFor(model => model.ConsultantTypeMasterID)

        <div id="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateHMConsultantMaster">

                @*@Html.HiddenFor(model => model.CentreCode)*@
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ConsultantType, new {  })
                        @Html.DropDownListFor(model => model.Name, (SelectList)ViewBag.ListHMConsultantTypeMaster, "---Select Consultant Type---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Select Consultant Type*" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ConsultantType)
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(m => m.EmployeeName, new { style = "" })
                    <span style="color:red">*</span>
                    <div class="form-group  fg-line">
                        @Html.TextBoxFor(model => model.EmployeeName, new { maxlength = "50", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EmployeeName)
                </div>

                <div class="col-sm-12 m-t-30">
                    <input class=" btn btn-primary btn-sm m-t-12 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateHMConsultantMasterRecord" type="button" />
                </div>
            </form>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/materialtheme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        var map = {};
        ///////////////new search functionality///////////////////////////////////
        debugger;
        var getData = function () {
            alert($("#CentreCode").val());
            var selectedCentreCode = $("#CentreCode").val();
            return function findMatches(q, cb) {
                var matches, substringRegex;
                // an array that will be populated with substring matches
                matches = [];
                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                //var valuCentreCode = $('#SelectedCentreCode :selected').val();
                //var valuStudentType = $('#IsCurrentYearStudent').val();

                $.ajax({

                    url: "/HMConsultantMaster/GetEmployeeName",
                    type: "POST",
                    // data: { term: q, },
                    data: { term: q, CentreCode: selectedCentreCode },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        $.each(data, function (i, response) {
                            //alert(response.id);
                            if (substrRegex.test(response.name)) {
                                map[response.name] = response;
                                matches.push(response.name);
                                //console.log(response.name);
                            }
                        });
                    },
                    async: false
                })
                cb(matches);
            };
        };

        $("#EmployeeName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            source: getData()
        }).on("typeahead:selected", function (obj, item) {
            $('#EmployeeID').val(map[item].id);

        });
        //  console.log(HMConsultantMaster.map[item].id);

        // end new search functionality

        HMConsultantMaster.Initialize();
    })
</script>

