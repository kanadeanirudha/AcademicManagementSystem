@*@model AMS.ViewModel.GeneralPolicyDetailsViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">Create Policy Details</h5>
    </div>
    <div class="widget-box">

        <form id="FormCreateGeneralPolicyDetails" method="post" class="form-horizontal well">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.CentreCode)
            @Html.HiddenFor(model => model.GeneralPolicyRulesID)
         

            <div class="row">
                <div class="span8">
                    <div class="row control-group">
                        <div class="span1">
                            
                            @Html.LabelFor(model => model.PolicyCode, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            
                            <b>@Html.DisplayFor(model => model.PolicyCode, new { style = "font-Weight:Bold;" })</b>
                        </div>
                        <div class="span1">
                            
                            @Html.LabelFor(model => model.PolicyQuestionDescription, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            <b>@Html.DisplayFor(model => model.PolicyQuestionDescription, new { style = "font-Weight:Bold;" })</b>

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span8">
                    <div class="row control-group">
                        <div class="span1">
                           
                            @Html.LabelFor(model => model.PolicyDefaultAnswer, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            <b>@Html.DisplayFor(model => model.PolicyDefaultAnswer, new { style = "font-Weight:Bold;" })</b>
                        </div>
                        <div class="span1">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.PolicyAnswered, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownListFor(model => model.PolicyAnswered, (SelectList)ViewBag.GeneralPolicyRules, "select", new { style = "font-Weight:Bold;" })
                            <br />
                            @Html.ValidationMessageFor(model => model.PolicyAnswered)
                         </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span8">
                    <div class="row control-group">
                        <div class="span1">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.ApplicableFromDate, new {  @class = "",style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.ApplicableFromDate, new { @class = "txtbox", ReadOnly = "True" })
                            <br />
                            @Html.ValidationMessageFor(model => model.ApplicableFromDate)
                        </div>
                        <div class="span1">
                          
                            @Html.LabelFor(model => model.ApplicableUptoDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.ApplicableUptoDate, new { style = "font-Weight:Bold;", ReadOnly = "ReadOnly" })
                            
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right">
                <button type="button" id="CreateGeneralPolicyDetailsRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>

            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        GeneralPolicyDetails.Initialize();
    });

</script>
<style>
    .span {
        width: 25px;
        margin-top: 1%;
        margin-left: 60px;
    }

    .spana {
        width: 100px;
    }

    .span1 {
        width: 135px;
    }

    .span2 {
        width: 190px;
    }

    .hide_column {
        display: none;
    }

    .paging_full_numbers {
        display: none;
    }

    div.dataTables_paginate {
        display: none;
    }

    .dataTables_paginate {
        display: none;
    }

    div.dataTables_info {
        display: none;
    }

    .dataTables_info {
        display: none;
    }
</style>*@

@*------new code-------*@

@model AMS.ViewModel.GeneralPolicyDetailsViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Policy Details</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateGeneralPolicyDetails">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.GeneralPolicyRulesID)
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PolicyCode, new { })
                        <div class="form-group  fg-line">
                            <b>@Html.DisplayFor(model => model.PolicyCode, new { @class = "form-control", style = "" })</b>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PolicyQuestionDescription, new { })
                        <div class="form-group fg-line">
                            <b>@Html.DisplayFor(model => model.PolicyQuestionDescription, new { @class = "form-control", style = "" })</b>
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PolicyDefaultAnswer, new { })
                        <div class="form-group fg-line">
                            <b>@Html.DisplayFor(model => model.PolicyDefaultAnswer, new { @class = "form-control", style = "" })</b>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PolicyAnswered, new { })
                        <div class="form-group fg-line select">
                            @Html.DropDownListFor(model => model.PolicyAnswered, (SelectList)ViewBag.GeneralPolicyRules, "select", new {  @class = "form-control", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PolicyAnswered)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.ApplicableFromDate, new { })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.ApplicableFromDate, new { @class = "form-control", ReadOnly = "True",style="background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ApplicableFromDate)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.ApplicableUptoDate, new { })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.ApplicableUptoDate, new { @class = "form-control", ReadOnly = "ReadOnly", style = "background-color:#fff;" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="margin-left: 2%; ">
                    <button type="button" id="CreateGeneralPolicyDetailsRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                </div>
            </form>

        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $('#ApplicableFromDate').datetimepicker({
            format: 'DD MMMM YYYY',
            ignoreReadonly: true,
            minDate: moment(),
        });
        GeneralPolicyDetails.Initialize();

    });
</script>

