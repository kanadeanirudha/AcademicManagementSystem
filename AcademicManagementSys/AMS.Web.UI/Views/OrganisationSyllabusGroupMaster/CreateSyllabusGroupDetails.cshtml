@*@model AMS.ViewModel.OrganisationSyllabusGroupMasterViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>
<div id="update-message" class="error invisible"></div>

<div class="container-fluid" style="height: 500px; width: auto; background-color: #f5f5f5; padding: 0px">
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(m => m.SyllabusGroupID)
    @Html.HiddenFor(m => m.SubjectGroupID)
    @Html.HiddenFor(m => m.SyllabusGrpDetailsID)
    
    <div id="SuccessMessageSyllabusGroupDetails" style="display: none; color: #000;" class="alert"></div>
    <div class="row-fluid">
        <div class="span12">

            <div class="widget-block" style="height: 235px; width: 910px; background-color: #FFF; overflow-y: scroll">
                <div style="display: none">@Html.ActionLink("Create New", "Create", new { id = 0 }, new { @class = "ajax", title = "Create" })</div>

                <div class="widget-head">
                    <h5 id="hFive"><i class="icon-th-list"></i>&nbsp;   @Resources.FormCreate_AddSyllabusGroupDetails (@Html.DisplayFor(m => m.SubjectGroupDesc))</h5>
                    <div class="pull-right" style="margin: -24px 60px 0px 10px;">
                        <div class="input-append" id="" style="float: right;">
                            <div style="display: none;">
                                <input type="hidden" name="_method" value="POST">
                            </div>


                            <div class="widget-control pull-right">
                                <a href="#" data-toggle="dropdown" class="btn dropdown-toggle"><i class="icon-plus"></i></a>
                                <ul class="dropdown-menu">
                                    <li id="CreateNewUnit">
                                        <a>
                                            <h6 style="color: #000;"><i class="icon-plus" style="padding-left: 7px;"></i>@Resources.DisplayName_AddNewUnit</h6>
                                        </a>
                                    </li>
                                </ul>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="widget-content">
                    <div class="widget-box">
                        <div id="DataTables_Table_1_wrapper" class="dataTables_wrapper" role="grid">
                            <div class="table_content">
                                <table id="myTableForSyllabusDetails" class="table table-striped table-bordered ">
                                    <thead>

                                        <tr>
                                            <th class="">ID</th>
                                            <th style="text-align: center; width: 30%">@Resources.TableHeaders_Unit</th>
                                            <th style="text-align: center; width: 20%">@Resources.TableHeaders_NoOfLectures</th>
                                            <th style="text-align: center; width: 20%">@Resources.TableHeaders_Weightage</th>
                                            <th style="text-align: center; width: 20%">@Resources.TableHeaders_AllocationStatus</th>
                                            <th style="text-align: center; width: 10%; text-decoration: none;">@Resources.TableHeaders_Action</th>

                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="widget-block" id="aaa" style="height: auto; width: auto; background-color: #f5f5f5; display: none">
        <div class="widget-head" id="DivCreateHead" style="display: none">
            <h5>@Resources.DisplayName_CreateNewUnit</h5>
          
        </div>
        <div class="widget-head" id="DivEditHead" style="display: none">
            <h5>@Resources.DisplayName_UpdateUnit</h5>
           
        </div>

        <div class="widget-box">
            <form id="FormCreateOrganisationSyllabusGroupDetails" method="post" class="form-horizontal well" style="padding:0px">
                

                
                <div class="nonboxy-widget">
                     <div class="row" style="padding: 2px;">
                        <div class="span9">
                        </div>
                    </div>

                    <div class="row">
                        <div class="span9">
                            <div class="row control-group">
                                <div class="span">&nbsp;</div>
                                <div class="spanFullName span1">
                                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>   @Html.LabelFor(model => model.UnitDescription, new { style = "font-Weight:Bold;" })
                                </div>
                                <div class="span3">
                                    @Html.TextBoxFor(model => model.UnitDescription, new { maxlength = "120",style = "font-Weight:Bold;" })
                                    <br />
                                    @Html.ValidationMessageFor(model => model.UnitDescription)
                                </div>
                                <div class="spanFullName span2">
                                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                                    @Html.LabelFor(model => model.NoOfLecturesForUnit, new { style = "font-Weight:Bold;" })
                                </div>
                                <div class="span2">
                                    @Html.TextBoxFor(model => model.NoOfLecturesForUnit, new { maxlength = "5" ,style = "font-Weight:Bold;"})
                                    <br />
                                    @Html.ValidationMessageFor(model => model.NoOfLecturesForUnit)
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="span9">
                            <div class="row control-group">
                                <div class="span">&nbsp;</div>
                                <div class="spanFullName span1">
                                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>   @Html.LabelFor(model => model.UnitWeightage, new { style = "font-Weight:Bold;" })
                                </div>
                                <div class="span3">
                                    @Html.TextBoxFor(model => model.UnitWeightage, new { maxlength = "5" ,style = "font-Weight:Bold;"})
                                    <br />
                                    @Html.ValidationMessageFor(model => model.UnitWeightage)
                                </div>
                                <div class="spanFullName span2">
                                    @Html.LabelFor(model => model.UnitPercentage, new { style = "font-Weight:Bold;" })
                                </div>
                                <div class="span2">
                                    @Html.EditorFor(model => model.UnitPercentage)
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="span9">
                            <div class="row control-group">
                                <div class="span">&nbsp;</div>
                                <div class="spanFullName span1">
                                    @Html.LabelFor(model => model.UnitStatus, new { style = "font-Weight:Bold;" })
                                </div>
                                <div class="span3">
                                    @Html.CheckBoxFor(model => model.UnitStatus)
                                </div>
                                <div class="spanFullName span2">
                                    &nbsp;
                                </div>
                                <div class="span2">
                                    <input id="CreateOrganisationSyllabusGroupDetailsRecord" type="button" value="@Resources.ButtonAction_Submit" class="btn btn-primary" style="width: 50px;" />

                                </div>
                            </div>
                        </div>
                    </div>






                </div>

                
            </form>
        </div>

    </div>
    
</div>
<script type="text/javascript">

    var oTable;
    $(document).ready(function () {

        OrganisationSyllabusGroupMaster.Initialize();

        oTable = $('#myTableForSyllabusDetails').dataTable({
            "bServerSide": true,
            "sAjaxSource": "OrganisationSyllabusGroupMaster/AjaxHandlerOrgSyllabusGroupDetails",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "SyllabusGroupID", "value": $('#SyllabusGroupID').val() });
            },
            //"bJQueryUI": true,
            //"sScrollY": false,
            "bProcessing": true,
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [

                                { "sClass": "hide_column", "aTargets": [0] },
                                { "bSortable": false, "aTargets": [1] },
                                {
                                    "targets": 2,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {

                                        var result = "<p  style='text-align: center; height:5px;'>" + data[2] + "</p>";

                                        return result;

                                    }
                                },

                                {
                                    "targets": 3,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {

                                        var result = "<p  style='text-align: center; height:5px;'>" + data[3] + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 4,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var chkStatus = '';
                                        var chkTrueFalse;
                                        if (data[4] == "True") {
                                            chkStatus = 'checked';
                                            chkTrueFalse = true;
                                        }
                                        else {
                                            chkStatus = '';
                                            chkTrueFalse = false;
                                        }
                                        var result = "<p  style='text-align: center; height:5px;'>" + '<input id="IsActive" class="CheckBox" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' />' + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 5,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var result = '@Html.ActionLink("Add1", "CreateSyllabusGroupTopics", new { ID = "ID1", IDs = "ID2", _unitName = "ID3",SyllabusGroupID = Model.SyllabusGroupID,_subjectName= Model.SubjectGroupDesc }, new { @class = "ajax  cboxElement", style = "text-decoration:none" })';
                                        result = result.replace('Add1', '<i class="icon-plus" title="Add Topic"></i>')
                                        result = result.replace('ID1', data[5]);
                                        result = result.replace('ID2', $('input[name=SubjectGroupID]').val());
                                        result = result.replace('ID3', data[6]);

                                        //result = result.replace("Edit1", '<i class="icon-edit"></i>');  
                                        var result1 = '<i class="icon-edit" title="Edit Unit"></i>';
                                        //result1 = result1.replace("ID5", data[4]);

                                        //var result1 = result1.replace("Edit11", '<i class="icon-edit" title="Edit Unit"></i>');

                                        var result = "<p  style='text-align: center; height:5px;'>" + result + "&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp; " + result1 + "</p>";
                                        return result;
                                    }
                                }

            ]
        });



        $('#myTableForSyllabusDetails tbody').on('click', 'tr td i[class="icon-edit"]', function () {

            var $td = $(this).closest('tr').children('td');
            var jSyllabusGrpID = $td.eq(0).text();
            var jUnitDescription = $td.eq(1).text();
            var jNoOfLectures = parseInt($td.eq(2).text());
            var jWeightage = $td.eq(3).text();
            var jActiveInactiveStatus = $td.eq(4).children('p').find('input').val();


            $('input[name=SyllabusGrpDetailsID]').val(jQuery.trim(jSyllabusGrpID));
            $('#UnitDescription').val(jQuery.trim(jUnitDescription));
            $('#NoOfLecturesForUnit').val(jQuery.trim(jNoOfLectures));
            $('#UnitWeightage').val(jQuery.trim(jWeightage));
            $('#UnitPercentage').val(jQuery.trim(jWeightage));
            if (jActiveInactiveStatus == 'true') {

                $('#UnitStatus').prop("checked", true);

            }
            else if (jActiveInactiveStatus == 'false') {
                $('#UnitStatus').prop("checked", false);

            }
            $('#aaa').show(true);
            $('#DivCreateHead').hide(true);
            $('#DivEditHead').show(true);

        });


    });

                            ListViewReload();

                            function SyllabusGroupDetailsTable() {
                                oTable.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandlerOrgSyllabusGroupDetails');
                            }

                            function ListViewReload() {
                                var oTableList = $('#myDataTable').dataTable();
                                oTableList.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandler');
                            }

</script>

<style>
    .hide_column {
        display: none;
    }

    .text-decoration {
        text-decoration: none;
    }

    .paging_full_numbers {
        display: none;
    }

    .paginate_button {
        display: none;
    }

    div.dataTables_paginate {
        display: none;
    }

    .dataTables_paginate {
        display: none;
    }

    div.dataTables_info {
        display: none;
    }

    .dataTables_info {
        display: none;
    }

    .span1 {
        width: 115px;
    }

    .span2 {
        width: 115px;
    }
</style>*@


@*-----------new code----------------*@
@model AMS.ViewModel.OrganisationSyllabusGroupMasterViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="update-message" class="error invisible"></div>

@*<div class="container">*@
@*<div class="block-header">
    <h2 style="text-transform: none;"><i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormCreate_AddSyllabusGroupDetails (@Html.DisplayFor(m => m.SubjectGroupDesc))</h2>
</div>*@

<div class="card">

    <div id="SuccessMessageSyllabusGroupDetails" style="display: none; color: #000;" class="alert"></div>

    <div class="card-header">
        <h2>
            @Resources.FormCreate_AddSyllabusGroupDetails (@Html.DisplayFor(m => m.SubjectGroupDesc))
        </h2>
    </div>

    <div class="card-body card-padding">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.SyllabusGroupID)
        @Html.HiddenFor(m => m.SubjectGroupID)
        @Html.HiddenFor(m => m.SyllabusGrpDetailsID)
        <div class="row">
            
        </div>
    </div>

    <div class="bootgrid-header container-fluid" id="data-table-command-header">
        <div class="row">
            <ul class="actions pull-right" id="CreateCentrewiseSession">
                <li class="dropdown">
                    <a href="" data-toggle="dropdown" title="Add New">
                        <i class="zmdi zmdi-more-vert"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li id="CreateNewUnit">
                            <a>
                                <i class="zmdi zmdi-plus-square"></i> &nbsp; @Resources.DisplayName_AddNewUnit
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>

    <table id="myTableForSyllabusDetails" class="table table-striped table-vmiddle table-responsive ">
        <thead>
            <tr>
                <th>ID</th>
                <th>@Resources.TableHeaders_Unit</th>
                <th>@Resources.TableHeaders_NoOfLectures</th>
                <th>@Resources.TableHeaders_Weightage</th>
                <th>@Resources.TableHeaders_AllocationStatus</th>
                <th>@Resources.TableHeaders_Action</th>
            </tr>
        </thead>
    </table>

    <div class="" id="aaa" style="height: auto; width: auto; display: none">
        <div class="block-header" id="DivCreateHead" style="display: none">
            <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.DisplayName_CreateNewUnit</h2>
        </div>

        <div class="block-header" id="DivEditHead" style="display: none">
            <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.DisplayName_UpdateUnit</h2>
        </div>

        <div class="card-body card-padding">
            <div class="row">
                <form id="FormCreateOrganisationSyllabusGroupDetails" method="post" class="">

                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.UnitDescription, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.UnitDescription, new { @class = "form-control", maxlength = "120", style = "" })
                            </div>
                            @Html.ValidationMessageFor(model => model.UnitDescription)
                        </div>

                        <div class="col-sm-6">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.NoOfLecturesForUnit, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.NoOfLecturesForUnit, new { @class = "form-control", maxlength = "5", style = "" })
                            </div>
                            @Html.ValidationMessageFor(model => model.NoOfLecturesForUnit)
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                            @Html.LabelFor(model => model.UnitWeightage, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.UnitWeightage, new { @class = "form-control", maxlength = "5", style = "" })
                            </div>
                            @Html.ValidationMessageFor(model => model.UnitWeightage)
                        </div>

                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.UnitPercentage, new { style = "" })
                            <div class="form-group fg-line">
                                @Html.EditorFor(model => model.UnitPercentage, new { @class = "form-control", style = "" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="form-group fg-line">
                            <div class="checkbox m-b-15" style="">
                                <label style="">
                                    <input type="checkbox" id="UnitStatus">
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.UnitStatus, new { @class = "", style = "" })
                                </label>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <button id="CreateOrganisationSyllabusGroupDetailsRecord" type="button" value="@Resources.ButtonAction_Submit" class="btn btn-primary" style="">@Resources.ButtonAction_Submit</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

    </div>

</div>
@*</div>*@

<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>

<script type="text/javascript">

    var oTableGD;
    $(document).ready(function () {
        
        OrganisationSyllabusGroupMaster.Initialize();

        oTableGD = $('#myTableForSyllabusDetails').DataTable({
            "bServerSide": true,
            "sAjaxSource": "OrganisationSyllabusGroupMaster/AjaxHandlerOrgSyllabusGroupDetails",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "SyllabusGroupID", "value": $('#SyllabusGroupID').val() });
            },
            //"bJQueryUI": true,
            //"sScrollY": false,
            "bProcessing": true,
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [

                                { "sClass": "hide_column", "aTargets": [0] },
                                { "bSortable": false, "aTargets": [1] },
                                {
                                    "targets": 2,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {

                                        var result = "<p  style='text-align: center; height:5px;'>" + data[2] + "</p>";

                                        return result;

                                    }
                                },

                                {
                                    "targets": 3,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {

                                        var result = "<p  style='text-align: center; height:5px;'>" + data[3] + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 4,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var chkStatus = '';
                                        var chkTrueFalse;
                                        if (data[4] == "True") {
                                            chkStatus = 'checked';
                                            chkTrueFalse = true;
                                        }
                                        else {
                                            chkStatus = '';
                                            chkTrueFalse = false;
                                        }
                                        //var result = "<p  style='text-align: center; height:5px;'>" + '<input id="IsActive" class="CheckBox" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' />' + "</p>";
                                        var result = "<p  class='checkbox' style='margin-left: 10%; margin-top: 0%;'>" + '<input id="IsActive" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' /><i class="input-helper"></i>' + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 5,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var result = '@Html.ActionLink("Add1", "CreateSyllabusGroupTopics", new { ID = "ID1", IDs = "ID2", _unitName = "ID3", SyllabusGroupID = Model.SyllabusGroupID, _subjectName = Model.SubjectGroupDesc }, new { @class = "mfpAjaxModal", style = "text-decoration:none" })';
                                        //result = result.replace('Add1', '<i class="icon-plus" title="Add Topic"></i>')
                                        result = result.replace("Add1", '<button title="@Resources.ToolTip_Create" class="btn btn-default"><i class="zmdi zmdi-plus"></i></button>');
                                        result = result.replace('ID1', data[5]);
                                        result = result.replace('ID2', $('input[name=SubjectGroupID]').val());
                                        result = result.replace('ID3', data[6]);

                                        //result = result.replace("Edit1", '<i class="icon-edit"></i>');
                                        //var result1 = '<i class="icon-edit" title="Edit Unit"></i>';
                                        var result1 = '<button title="@Resources.ToolTip_Edit" class="btn btn-default"><i class="zmdi zmdi-edit"></i></button>';
                                        //result1 = result1.replace("ID5", data[4]);

                                        //var result1 = result1.replace("Edit11", '<i class="icon-edit" title="Edit Unit"></i>');

                                        var result = "<p  style=''>" + result + " " + result1 + "</p>";
                                        return result;
                                    }
                                }

            ]
        });

        

        //$('#myTableForSyllabusDetails tbody').on('click', 'tr td i[class="icon-edit"]', function () {
        $('#myTableForSyllabusDetails tbody').on('click', 'tr td button', function () {
            //alert($(this).closest('tr').children('td').eq(0).text());
            var $td = $(this).closest('tr').children('td');
            var jSyllabusGrpID = $td.eq(0).text();
            var jUnitDescription = $td.eq(1).text();
            var jNoOfLectures = parseInt($td.eq(2).text());
            var jWeightage = $td.eq(3).text();
            var jActiveInactiveStatus = $td.eq(4).children('p').find('input').val();


            $('input[name=SyllabusGrpDetailsID]').val(jQuery.trim(jSyllabusGrpID));
            $('#UnitDescription').val(jQuery.trim(jUnitDescription));
            $('#NoOfLecturesForUnit').val(jQuery.trim(jNoOfLectures));
            $('#UnitWeightage').val(jQuery.trim(jWeightage));
            $('#UnitPercentage').val(jQuery.trim(jWeightage));
            if (jActiveInactiveStatus == 'true') {

                $('#UnitStatus').prop("checked", true);

            }
            else if (jActiveInactiveStatus == 'false') {
                $('#UnitStatus').prop("checked", false);

            }
            $('#aaa').show(true);
            $('#DivCreateHead').hide(true);
            $('#DivEditHead').show(true);

        });

        DataTableSettings(oTableGD, "myTableForSyllabusDetails", "toggleTableColumn");

    });

                            ListViewReload();

                            function SyllabusGroupDetailsTable() {
                                var oTableGD = $('#myTableForSyllabusDetails').dataTable();
                                oTableGD.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandlerOrgSyllabusGroupDetails');
                            }

                            function ListViewReload() {
                                var oTableList = $('#myDataTable').dataTable();
                                oTableList.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandler');
                            }

</script>