@*@model AMS.ViewModel.EmployeeExperienceViewModel 

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">@Resources.FormUpdate_ExperienceDetails
         
        </h5>
       
    </div>
    <div class="widget-box" id="EmployeeExperience">

        <form id="FormEditEmployeeExperience" method="post" class="form-horizontal well">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(model => model.ExperienceID)
            @Html.HiddenFor(model => model.EmployeeID)
          

                       
                <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PreviousOrganisationName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextBoxFor(model => model.PreviousOrganisationName, new { style = "width:106%;", maxlength = "255" })
                             <br />
                            @Html.ValidationMessageFor(model => model.PreviousOrganisationName)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PreviousOrganisationAddress, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextAreaFor(model => model.PreviousOrganisationAddress, new { @class = "", maxlength = "255" })
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.ExperienceFromYear, new { style = "font-Weight:Bold;", Readonly = "True" })
                             <br />
                            @Html.LabelFor(model => model.ExperienceToYear, new { style = "font-Weight:Bold;", Readonly = "True" })
                        </div>
                        <div class="span2">
                           @Html.TextBoxFor(model => model.ExperienceFromYear, new { @class = "txtbox", maxlength = "255" }) &nbsp;
                         
                            @Html.ValidationMessageFor(model => model.ExperienceFromYear)
                            <br />
                             @Html.TextBoxFor(model => model.ExperienceToYear, new { @class = "txtbox", maxlength = "255" })
                           
                            @Html.ValidationMessageFor(model => model.ExperienceToYear)
                        </div>


                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.ExperienceInMonth, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.ExperienceInMonth, new { @class = "txtbox" })
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.Designation, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.Designation, new { @class = "txtbox", maxlength = "100" })
                                 <br />
                            @Html.ValidationMessageFor(model => model.Designation)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.GeneralExperienceTypeMasterID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(m => m.GeneralExperienceTypeMasterID, (SelectList)ViewBag.GeneralExperienceTypeMaster, Resources.ddlHeaders_SelectExperienceType, new { @class = "form-control chosen-select", style = "font-weight:bold;", })
                              <br />
                            @Html.ValidationMessageFor(model => model.GeneralExperienceTypeMasterID)
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.GeneralJobStatusID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownListFor(m => m.GeneralJobStatusID, (SelectList)ViewBag.GeneralJobStatus, Resources.ddlHeaders_SelectJobStatus, new { @class = "form-control chosen-select", style = "font-weight:bold;", })
                            
                              <br />
                            @Html.ValidationMessageFor(model => model.GeneralJobStatusID)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.NatureOfAppointment, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.NatureOfAppointment, new { @class = "txtbox", maxlength = 255 })<label for="input01" style="color: gray; font-style: italic">@Resources.DisplayName_Ex_TeachingforStd</label>
                            @Html.ValidationMessageFor(model => model.NatureOfAppointment)
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.LastPayDrawnPayScale, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.LastPayDrawnPayScale, new { @class = "txtbox", maxlength = "100" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.AppointmentOrderDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.AppointmentOrderDate, new { @class = "txtbox", Readonly = "True" })
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.AppointmentOrderNumber, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.AppointmentOrderNumber, new { @class = "txtbox", maxlength = "50" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.GeneralBoardUniversityID, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(m => m.GeneralBoardUniversityID, (SelectList)ViewBag.GeneralBoardUniversityMaster, Resources.ddlHeaders_SelectUniversityORBoard, new { @class = "form-control chosen-select", style = "font-weight:bold;", })
                             <br />
                            @Html.ValidationMessageFor(model => model.GeneralBoardUniversityID)
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.UniversityApprovalType, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownList("UniversityApprovalType", ViewData["UniversityApprovalType"] as List<SelectListItem>, new { style = "width:210px;font-weight:bold", @class = "dropdown1" })
                             <br />
                            @Html.ValidationMessageFor(model => model.UniversityApprovalType)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.UniversityApprovalDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.UniversityApprovalDate, new { @class = "txtbox", Readonly = "True" })
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.UniversityApprovalNumber, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.UniversityApprovalNumber, new { @class = "txtbox", maxlength = "30" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.YearOfApproval, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.YearOfApproval, new { @class = "txtbox" })
                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.MonthOfApproval, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MonthOfApproval, new { @class = "txtbox" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                    <div class="span10">
                        <div class="row control-group">
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.SubjectForApproval, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span3">
                                @Html.TextBoxFor(model => model.SubjectForApproval, new { @class = "txtbox", maxlength = "50" })
                            </div>

                            <div class="spanFullName">
                                @Html.LabelFor(model => model.Remarks, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span2">
                                @Html.TextAreaFor(model => model.Remarks, new { @class = "", maxlength = "100" })
                            </div>
                        </div>
                    </div>
                </div>
       
        
            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right">
                <button type="button" id="EditEmployeeExperienceRecord" class="btn btn-primary">@Resources.ButtonAction_SaveChanges</button>           
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        EmployeeExperience.Initialize();
    });

</script>*@

<!------------------------new code------------------------------>
@model AMS.ViewModel.EmployeeExperienceViewModel
@{
    Layout = null;
}
<style type="text/css">
    .mfp-content {
        width: 75%;
    }
</style>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormCreate_ExperienceDetails</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-bottom:760px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <div id="update-message" class="alert" style="display: none; color: #000"></div>

            <div class="" id="EmployeeExperience">
            </div>

            <div id="EmployeeServiceDetails">
                <form id="FormEditEmployeeExperience" method="post">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.ID)
                    @Html.HiddenFor(model => model.ExperienceID)
                    @Html.HiddenFor(model => model.EmployeeID)


                    <div class="col-sm-12">
                        <div class="col-sm-12">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.PreviousOrganisationName, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.PreviousOrganisationName, new { @class = "form-control", style = "", maxlength = "255" })
                            </div>
                            @Html.ValidationMessageFor(model => model.PreviousOrganisationName)
                        </div>
                    </div>


                    <div class="col-sm-12">
                        <div class="col-sm-12">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.PreviousOrganisationAddress, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextAreaFor(model => model.PreviousOrganisationAddress, new { @class = "form-control", maxlength = "255" })
                            </div>
                        </div>
                    </div>



                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.ExperienceFromYear, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.ExperienceFromYear, new { @class = "form-control", maxlength = "255" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ExperienceFromYear)
                        </div>

                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.ExperienceToYear, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.ExperienceToYear, new { @class = "form-control", maxlength = "255" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ExperienceToYear)
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.ExperienceInMonth, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.ExperienceInMonth, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.Designation, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Designation)
                        </div>

                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.GeneralExperienceTypeMasterID, new { style = "" })
                            <div class="form-group  fg-line select">
                                @Html.DropDownListFor(m => m.GeneralExperienceTypeMasterID, (SelectList)ViewBag.GeneralExperienceTypeMaster, Resources.ddlHeaders_SelectExperienceType, new { @class = "form-control", style = "", })
                            </div>
                            @Html.ValidationMessageFor(model => model.GeneralExperienceTypeMasterID)
                        </div>

                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.GeneralJobStatusID, new { style = "" })
                            <div class="form-group  fg-line select">
                                @Html.DropDownListFor(m => m.GeneralJobStatusID, (SelectList)ViewBag.GeneralJobStatus, Resources.ddlHeaders_SelectJobStatus, new { @class = "form-control", style = "", })
                            </div>
                            @Html.ValidationMessageFor(model => model.GeneralJobStatusID)
                        </div>
                    </div>



                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.NatureOfAppointment, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.NatureOfAppointment, new { @class = "form-control", maxlength = 255 })
                            </div>
                            <label for="input01" style="color: gray; font-style: italic">@Resources.DisplayName_Ex_TeachingforStd</label>
                            @Html.ValidationMessageFor(model => model.NatureOfAppointment)
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.LastPayDrawnPayScale, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.LastPayDrawnPayScale, new { @class = "form-control", style = "text-align:right;", maxlength = "100" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.AppointmentOrderDate, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.AppointmentOrderDate, new { @class = "form-control", Readonly = "True", style = "background-color:#fff;" })
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-12">

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.AppointmentOrderNumber, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.AppointmentOrderNumber, new { @class = "form-control", maxlength = "50" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.GeneralBoardUniversityID, new { style = "" })
                            <div class="form-group  fg-line select">
                                @Html.DropDownListFor(m => m.GeneralBoardUniversityID, (SelectList)ViewBag.GeneralBoardUniversityMaster, Resources.ddlHeaders_SelectUniversityORBoard, new { @class = "form-control", style = "", })
                            </div>
                            @Html.ValidationMessageFor(model => model.GeneralBoardUniversityID)
                        </div>

                        <div class="col-sm-4">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.UniversityApprovalType, new { style = "" })
                            <div class="form-group  fg-line select">
                                @Html.DropDownList("UniversityApprovalType", ViewData["UniversityApprovalType"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.UniversityApprovalType)
                        </div>

                    </div>



                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.UniversityApprovalDate, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.UniversityApprovalDate, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.UniversityApprovalNumber, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.UniversityApprovalNumber, new { @class = "form-control", maxlength = "30" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.YearOfApproval, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.YearOfApproval, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.MonthOfApproval, new { style = "" })
                            <div class="form-group  fg-line dtp-container">
                                @Html.TextBoxFor(model => model.MonthOfApproval, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.SubjectForApproval, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextBoxFor(model => model.SubjectForApproval, new { @class = "form-control", maxlength = "50" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.Remarks, new { style = "" })
                            <div class="form-group  fg-line">
                                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", maxlength = "100" })
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-12">
                        <div class="form-group">
                            <button type="button" id="EditEmployeeExperienceRecord" class="btn btn-primary">@Resources.ButtonAction_SaveChanges</button>
                        </div>
                    </div>


                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        EmployeeExperience.Initialize();
    });

</script>






