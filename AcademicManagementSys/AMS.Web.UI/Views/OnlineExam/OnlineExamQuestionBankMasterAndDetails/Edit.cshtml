@model AMS.ViewModel.OnlineExamQuestionBankMasterAndDetailsViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jquery-ui.theme.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("Content/admin/jquery-ui-1.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/ImageArea.css")" rel="stylesheet" />
<script src="~/Scripts/jquery.imgareaselect.-1.0.0.js"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Edit Online Exam Question</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditOnlineExamQuestionBankMasterAndDetails">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.X)
                @Html.HiddenFor(model => model.Y)
                @Html.HiddenFor(model => model.Width)
                @Html.HiddenFor(model => model.Height)
                @Html.HiddenFor(model => model.Flickr)
                @Html.HiddenFor(m => m.SubjectID)
                @Html.HiddenFor(m => m.OnlineExamQuestionBankMasterID)
                @Html.HiddenFor(m => m.OnlineExamQuestionBankDetailsID)
                @Html.HiddenFor(m => m.OptionTextList)
                @{var displayimage = "";}
                @{var displaytext = ""; var displayOptionTable = ""; var disableAttachementRadio = "";}
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.GenQuestionTypeID, new { })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(model => model.GenQuestionTypeID, (SelectList)ViewBag.QuestionTypeMasterListt, "---Select Question Type ---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.GeneralQuestionLevelMasterID, new { })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(model => model.GeneralQuestionLevelMasterID, (SelectList)ViewBag.QuestionLevelMasterListt, "---Select Question Level ---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "" })
                        </div>
                    </div>
                </div>
                @*<div class="col-sm-12">
                        <div class="col-sm-6">
                            <div class="checkbox m-b-15" style="padding-top:8%;">
                                <label>
                                     @if(Model.IsOptionInImage == true){
                                    <input type="checkbox" id="IsQuestionInImage" checked="checked">
                                     }
                                    else{
                                     <input type="checkbox" id="IsQuestionInImage">
                                    }
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsQuestionInImage)
                                </label>
                            </div>
                        </div>
                    </div>*@
                @*@if (Model.IsQuestionInImage == true){
                           displaytext = "display:none";
                    }
                    else
                    {
                      displayimage = "display:none";
                    }*@
                <div class="row" id="DivQuestionLableText">
                    <div class="col-sm-12">
                        @Html.LabelFor(model => model.QuestionLableText, new { style = "" })
                        <div class="form-group fg-line">
                            @Html.TextAreaFor(model => model.QuestionLableText, new { @class = "form-control", style = "" })
                        </div>
                    </div>
                </div>
                <div class="row" id="DivQuestionImage">
                    <div class="col-sm-12">
                        <div class="col-sm-3" class="form-group fg-line">
                            @Html.LabelFor(model => model.ImageName, new { Style = "" })
                            @Html.FileFor(model => model.QuestionImageFile)
                        </div>
                        @if (Model.ImageName != null && Model.ImageName != "")
                        {
                            <div class="col-sm-6" class="form-group fg-line">
                                <img src="/Content/UploadedFiles/QuestionImage/@Model.ImageName" style="width: 60px;" />
                            </div>
                        }
                        <input type='hidden' class='ImageName' id="ImageNameID" value="@Model.ImageName" />
                        <input type='hidden' class='ImageType' id="ImageTypeID" value="@Model.ImageType" />
                        @Html.ValidationMessageFor(model => model.QuestionLableText)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <div class="checkbox m-b-15" style="padding-top:8%;">
                            <label>
                                @if (Model.IsQuestionDescriptive == true)
                                {
                                    displayOptionTable = "display:none;";
                                    <input type="checkbox" id="IsQuestionDescriptive" checked="checked" disabled>
                                }
                                else
                                {
                                    disableAttachementRadio = "disabled";
                                    <input type="checkbox" id="IsQuestionDescriptive" disabled>
                                }
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsQuestionDescriptive)
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="m-b-15" style="padding-top:8%;">
                            @Html.LabelFor(model => model.IsAttachmentCompalsary)
                            <label class="radio radio-inline m-r-20 m-l-30">
                                @if (Model.IsAttachmentCompalsary == 1)
                                {
                                    <input type="radio" name="IsAttachmentCompalsary" value="1" checked="checked">
                                }
                                else
                                {
                                    <input type="radio" name="IsAttachmentCompalsary" value="1" @disableAttachementRadio>
                                }
                                <i class="input-helper"></i>
                                Optional
                            </label>
                            <label class="radio radio-inline m-r-20">
                                @if (Model.IsAttachmentCompalsary == 2)
                                {
                                    <input type="radio" name="IsAttachmentCompalsary" value="2" checked="checked">
                                }
                                else
                                {
                                    <input type="radio" name="IsAttachmentCompalsary" value="2" @disableAttachementRadio>
                                }
                                <i class="input-helper"></i>
                                Mandatory
                            </label>
                            <input type="button" class="btn btn-sm btn-primary" style="padding: 0 4px;" id="clearAttachementResponse" value="Clear" />
                        </div>
                    </div>
                </div>
                <div id="OptionDivForQuestion" style="@displayOptionTable">
                    <hr style="margin: 0px" />
                    <div><h6>Option Details </h6></div>
                    <div id="DisplayMessage" style="display:none;color:#000;" class="alert"></div>
                    <br />
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="checkbox m-b-15">
                                        <label>
                                            <input type="checkbox" id="IsOptionInImage">
                                            <i class="input-helper"></i>
                                            @Html.LabelFor(model => model.IsOptionInImage)
                                        </label>
                                    </div>
                                </div>
                                <div class="col-sm-8" id="DivOptionText">
                                    @Html.LabelFor(model => model.OptionText, new { Style = "" })
                                    <div class="form-group fg-line">
                                        @Html.TextBoxFor(model => model.OptionText, new { @class = "form-control", style = "" })
                                    </div>
                                </div>
                                <div class="col-sm-8" id="DivOptionImage" style="display: none;">
                                    @Html.LabelFor(model => model.OptionImage, new { Style = "" })
                                    @Html.FileFor(model => model.OptionImageFile)
                                </div>

                                <div class="col-sm-3">
                                    <div class="checkbox m-b-15" style="padding-top:8%;">
                                        <label>
                                            <input type="checkbox" id="IsAnswer" disabled='disabled'>
                                            <i class="input-helper"></i>
                                            @Html.LabelFor(model => model.IsAnswer)
                                        </label>
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <label for="input01">&nbsp;</label>
                                    @*<input type="button" id="addItem" class="btn btn-primary" value="Add" />*@
                                    <button type="button" id="addItem" class="btn bgm-teal btn-icon waves-effect waves-circle waves-float" value="Add">
                                        <i class="zmdi zmdi-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div id="DivAddRowTable" style="overflow:auto;">
                                <table id="tblData" class="table user-tbl " style="border: 1px solid #dddddd">
                                    <thead>
                                        <tr>
                                            <th>Is Image</th>
                                            <th>Option</th>
                                            <th>Answer</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.OptionTextList != null)
                                        {
                                            String[] OptionTextArray = Model.OptionTextList.Split(new char[] { '~' });
                                            for (var i = 0; i < OptionTextArray.Length; i = i + 4)
                                            {
                                                <tr>
                                                    <td style="text-align:left;">
                                                        <input type='hidden' class='OnlineExamAnsDetailId' value='@OptionTextArray[i]' />

                                                        @if (OptionTextArray[i + 2] != "" && OptionTextArray[i + 2] != null)
                                                        {
                                                            <input type='checkbox' class='IsImg' checked='checked' value='1' disabled='disabled' />
                                                        }
                                                        else
                                                        {
                                                            <input type='checkbox' class='IsImg' value='0' disabled='disabled' />
                                                        }

                                                    </td>
                                                    <td style="text-align:left;">
                                                        @if (OptionTextArray[i + 2] != "" && OptionTextArray[i + 2] != null)
                                                        {
                                                            <input type='text' style='width:60%;display:none' value='@OptionTextArray[i + 2]' />
                                                            <img src='/Content/UploadedFiles/AnswerImage/@OptionTextArray[i + 2]' style="width: 60px;" />
                                                        }
                                                        else
                                                        {
                                                            <input type='text' style='width:60%' value='@OptionTextArray[i + 1]' />
                                                        }
                                                    </td>

                                                    <td style="text-align:left;">
                                                        @if (OptionTextArray[i + 3] == "0")
                                                        {
                                                            <input type='checkbox' id='IsAns' class='EnableDisable' value='@OptionTextArray[i + 3]' disabled="disabled" />
                                                        }
                                                        else
                                                        {
                                                            <input type='checkbox' id='IsAns' class='EnableDisable' value='@OptionTextArray[i + 3]' checked='checked' />
                                                        }
                                                    </td>
                                                    <td style="text-align:left;"><i class='zmdi zmdi-delete zmdi-hc-fw' style='cursor:pointer' title=Delete></td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="checkbox" id="aaa" style="display: none" />

                <div class="form-group" style="margin-left: 2%; ">
                    <button type="button" id="EditOnlineExamQuestionBankMasterAndDetailsRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        OnlineExamQuestionBankMasterAndDetails.Initialize();
        var boxes = $('#aaa').attr('disabled', true);

        //What happens if the File changes?
        $('#QuestionImageFile').change(function (evt) {

            var f = evt.target.files[0];
            var reader = new FileReader();
            var image = new Image();

            if (!f.type.match('image.*')) {
                alert("The selected file does not appear to be an image.");
                return;
            }
            var filename = "QuestionImageFile";
            var maxSize = ValidateFileUpload(filename);
            if (maxSize == 1) {
                alert("Maximum file size exceeds,Your Question Image size should be less than 50 kb");
            }
            else {
                setBox('#IsFile');
                reader.onload = function (e) { preview.attr('src', e.target.result); };
                reader.readAsDataURL(f);
            }
        });


        function ValidateFileUpload(fileName) {
            var fuData = document.getElementById(fileName);
            var FileUploadPath = fuData.value;


            if (FileUploadPath == '') {
                alert("Please upload an image");

            } else {
                var Extension = FileUploadPath.substring(FileUploadPath.lastIndexOf('.') + 1).toLowerCase();



                if (Extension == "gif" || Extension == "png" || Extension == "bmp"
                            || Extension == "jpeg" || Extension == "jpg") {


                    if (fuData.files && fuData.files[0]) {

                        var size = fuData.files[0].size;
                        //alert(size);

                        if (size > 50000) {
                            return 1;
                        } else {
                            var reader = new FileReader();

                            reader.onload = function (e) {
                                $('#blah').attr('src', e.target.result);
                            }

                            reader.readAsDataURL(fuData.files[0]);
                        }
                    }

                }
                else {
                    alert("Photo only allows file types of GIF, PNG, JPG, JPEG and BMP. ");
                }
            }
        }


        //Check one of the checkboxes
        var setBox = function (filter) {
            $('button').attr('disabled', false);
            boxes.attr('checked', false)
            .filter(filter).attr({ 'checked': true, 'disabled': false });
        };

        //What happens if any checkbox is checked ?!
        boxes.change(function () {
            setBox(this);
            $('#' + this.id.substr(2)).change();
        });

        var preview = $('#previewQuestionImage').load(function () {

            debugger;
            setPreview();
            ias.setOptions({
                x1: 0,
                y1: 0,
                x2: $(this).width(),
                y2: $(this).height(),
                show: true
            });
        });
        //Set the 4 coordinates for the cropping
        var setPreview = function (x, y, w, h) {
            $('#X').val(x || 0);
            $('#Y').val(y || 0);
            $('#Width').val(w || preview[0].naturalWidth);
            $('#Height').val(h || preview[0].naturalHeight);
        };
        var ias = preview.imgAreaSelect({
            handles: true,
            instance: true,
            parent: 'body',
            onSelectEnd: function (s, e) {
                var scale = preview[0].naturalWidth / preview.width();
                var _f = Math.floor;
                setPreview(_f(scale * e.x1), _f(scale * e.y1), _f(scale * e.width), _f(scale * e.height));
            }
        });

        //Fetch Flickr images
        var fetchImages = function (query) {
            $.getJSON('http://www.flickr.com/services/feeds/photos_public.gne?jsoncallback=?', {
                tags: query,
                tagmode: "any",
                format: "json"
            }, function (data) {
                var screen = $('<div />').addClass('waitScreen').click(function () {
                    $(this).remove();
                }).appendTo('body');
                var box = $('<div />').addClass('flickrImages').appendTo(screen);
                $.each(data.items, function (i, v) {
                    console.log(data.items[i]);
                    $('<img />').addClass('flickrImage').attr('src', data.items[i].media.m).click(function () {
                        $('#Flickr').val(this.src).change();
                        screen.remove();
                    }).appendTo(box);
                });
            });
        };

        //Flickr
        $('#FlickrQuery').change(function () {
            fetchImages(this.value);
        });

        $('#Flickr').change(function () {
            setBox('#IsFlickr');
            preview.attr('src', this.value);
        });

        //What happens if the URL changes?
        $('#Url').change(function () {
            setBox('#IsUrl');
            preview.attr('src', this.value);
        });
        //Initial state of X, Y, Width and Height is 0 0 1 1
        setPreview(0, 0, 1, 1);
    });
    $("#tblData tbody").on("click", "tr td i", function () {
        debugger;
        var ImageName = $(this).parent().prev().prev().children().val();
        $.ajax({
            url: "/OnlineExamQuestionBankMasterAndDetails/DeleteImage",
            type: "POST",
            data: { "ImageName": ImageName },
            dataType: 'json',
            success: function (data) {

            },
        });
        if ($(this).parent().prev().children().is(":checked")) {
            $("#tblData tbody tr td input[id='IsAns']").prop("disabled", false);
            $("#IsAnswer").prop("disabled", false);
        }
        $(this).closest('tr').remove();
    });
    debugger;
    OnlineExamQuestionBankMasterAndDetails.EnableDisable();
    OnlineExamQuestionBankMasterAndDetails.DeleteAnswerOption();
</script>