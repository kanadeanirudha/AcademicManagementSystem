@model AMS.ViewModel.OnlineExaminationQuestionPaperSetMasterViewModel
<script src="@Url.Content("~/Scripts/fnGetColumnData.js")" type="text/javascript"></script>
<div class="container-fluid">
    <ul class="breadcrumb">
        <li>Online Exam<span class="divider">»</span></li>
        <li class="active">Paper Set</li>
    </ul>
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-block">
                <div style="display: none">@Html.ActionLink("Create New", "Create", new { id = 0 }, new { @class = "ajax", title = "Create" })</div>
                <div class="widget-head">
                    <h5 id="hFive"><i class="black-icons users"></i>&nbsp; Paper Set</h5>
                    <div class="pull-right" style="margin: -24px 60px 0px 10px;">
                        <div class="input-append" id="" style="float: right;">
                            <div style="display: none;">
                                <input type="hidden" name="_method" value="POST">
                            </div>
                            <div>
                                <select name="data[User][searchby]" class="" id="showrecord" tabindex="16" style="float: left;">
                                    <option value="10">@Resources.GlobalProperties_ShowRecords</option>
                                    <option value="10">@Resources.GlobalProperties_10</option>
                                    <option value="50">@Resources.GlobalProperties_50</option>
                                    <option value="100">@Resources.GlobalProperties_100</option>
                                </select>
                                &nbsp;&nbsp;
                                <input type="text" name="data[User][search]" class="search_query input-medium" placeholder="@Resources.GlobalProperties_Search..." size="16" autocomplete="off" id="UserSearch">
                                <button class="btn" type="button" id="searchBtn"><i class="icon-search"></i></button>
                            </div>
                           

                        </div>
                    </div>
                </div>
                <div class="widget-content">
                    <div class="widget-box">
                        <div id="DataTables_Table_1_wrapper" class="dataTables_wrapper" role="grid">
                            <div class="table_content">
                                <table id="myDataTable" class="table table-striped table-bordered ">
                                    <thead>
                                        <tr>
                                            <th style="text-align: center; width: 90%;">    Paper Set</th>
                                            <th style="text-align: center; width: 10%; line-height: 40px">  @Resources.DisplayName_Actions</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            <div class="widget-bottom">
                                <br>
                                <br>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        OnlineExaminationQuestionPaperSetMaster.Initialize();
        var oTable = $('#myDataTable').dataTable({
            "bServerSide": true,
            "sAjaxSource": "OnlineExaminationQuestionPaperSetMaster/AjaxHandler",
            "bJQueryUI": true,
            "sScrollY": false,
            "bProcessing": true,
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [
                        {
                            "targets": 0,
                            "data": null,
                            "render": function (data, type, full, meta) {
                                var result = "<p  style=' height:5px;'>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " +  data[1] + "</p>";
                                return result;
                            }
                        },
                        {
                            "targets": 1,
                            "bSortable": false,
                            "data": null,
                            "render": function (data, type, full, meta) {
                                
                                if (data[3] > 0) {
                                    var result2 = '@Html.ActionLink("View1", "View", new { ID = "ID1", Exam = "ID2"}, new { @class = "ajax  cboxElement" })';
                                    result2 = result2.replace('ID1', data[3]);
                                    result2 = result2.replace('ID2', String(data[0] + " [ " + data[1] + " ] ").replace(/ /g, "~"));
                                    result2 = result2.replace("View1", '<i class="icon-list-alt" title="@Resources.ToolTip_View"></i>');
                                    var result = "<p  style='text-align: center; height:5px;'>" + result2 + "</p>";
                                }
                                else {
                                    var result1 = '@Html.ActionLink("Create1", "Create", new { ID = "ID1", Exam = "ID2", TotalQue = "ID3" }, new { @class = "ajax  cboxElement" })';
                                    result1 = result1.replace('ID1', data[2]);
                                    result1 = result1.replace('ID3', data[4]);
                                    result1 = result1.replace('ID2', String(data[0] + " [ " + data[1] + " ] ").replace(/ /g, "~"));
                                    result1 = result1.replace("Create1", '<i class="icon-plus" title="@Resources.ToolTip_Create"></i>');
                                    var result = "<p  style='text-align: center; height:5px;'>" + result1 + "</p>";
                                }                                
                                return result;
                            }
                        }
            ],
            "drawCallback": function (settings) {
                debugger;
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                var table = $('#myDataTable').dataTable();
                api.column(0, { page: 'current' }).data().each(function (group, i) {
                    var data = String(group).split(',');
                    if (last !== data[0]) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="2" style="font-weight:bold;background-color:rgba(128,128,128,0.2);color:#000;font-size:12px;font-family: verdana;">' + data[0] + '</td></tr>'
                        );
                        last = data[0];
                    }
                });
            }
        });
    });
</script>
