@model AMS.ViewModel.CRMSaleEnquiryMasterAndAccountDetailsViewModel

<link href="@Url.Content("~/Content/materialtheme/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css")" rel="stylesheet" type="text/css" />

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Enquiry</h2>

    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateCRMSaleEnquiryMaster" role="form">
                @Html.HiddenFor(m => m.CRMSaleEnquiryAccountMasterID)
                @Html.HiddenFor(m => m.CRMSaleEnquiryAccountContactPersonID)
                @Html.HiddenFor(m => m.EnquiryMasterLatitude)
                @Html.HiddenFor(m => m.EnquiryMasterLongitude)

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EnquiryAccountType, new { })
                        @Html.DropDownList("EnquiryAccountType", ViewData["EnquiryAccountType"] as List<SelectListItem>, new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EnquiryAccountType)
                </div>
                <div class="col-sm-6" id="AccountNameDiv">
                    <div class="input-group">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.AccountName, new { })
                            @Html.TextBoxFor(model => model.AccountName, new { maxlength = "50", @class = "form-control input-sm typeahead" })
                        </div>
                        <span class="input-group-addon last">
                            <a  title="Add New Account" href="@Url.Action("Index", "CRMSaleEnquiryAccountMaster")">
                                <i class="zmdi zmdi-plus-circle"></i>
                            </a>
                        </span>

                    </div>
                    @Html.ValidationMessageFor(model => model.AccountName)
                </div>

                <div class="col-sm-6">                    
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.EnquiryContactPerson, new { })
                            @Html.TextBoxFor(model => model.EnquiryContactPerson, new { maxlength = "50", @class = "form-control col-sm-12 input-sm typeahead" })
                        </div>
                        @*<span class="input-group-addon last" id="contactPerson">
                    <a class="mfpAjaxModal" title="Add New Contact Person" href="@Url.Action(" CreateContactPerson", "CRMSaleEnquiryAccountMaster")">
                        <i class="zmdi zmdi-plus-circle"></i>
                    </a>
                </span>*@
                    
                    @Html.ValidationMessageFor(model => model.EnquiryContactPerson)
                </div>

                <div class="col-sm-6" style="padding-bottom: 5px;">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EnquirySource, new { })
                        @Html.DropDownList("EnquirySource", ViewData["EnquirySource"] as List<SelectListItem>, new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EnquirySource)
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.GenServiceRequiredID, new { })
                        @Html.DropDownListFor(model => model.GenServiceRequiredName, (SelectList)ViewBag.GeneralServiceMasterList, new { @class = "form-control input-sm selectpicker", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "", multiple = "multiple" })
                    </div>
                    @Html.ValidationMessageFor(model => model.GenServiceRequiredID)
                </div>

                @*<div class="col-sm-6 m-b-25" id="genServiceRequiredID">
                    @Html.LabelFor(model => model.GenServiceRequiredID, new { @class = "f-300 m-b-5" })
                    <p id="e5_f">
                        <select id="services" class="selectpicker col-sm-12" multiple name="selectService">
                            @foreach (var service in ViewBag.GeneralServiceMasterList)
                            {
                                <option id="@service.Value" value="@service.Value"> @service.Text</option>
                            }
                        </select>
                    </p>
                </div>*@



                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ExpectedBillingAmount, new { })
                        @Html.TextBoxFor(model => model.ExpectedBillingAmount, new { maxlength = "12", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ExpectedBillingAmount)
                </div>


                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EnquiryDesription, new { })
                        @Html.TextBoxFor(model => model.EnquiryDesription, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EnquiryDesription)
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EnquiryMasterAddress, new { })
                        @Html.TextBoxFor(model => model.EnquiryMasterAddress, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EnquiryMasterAddress)
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EnquiryMasterCity, new { })
                        @Html.TextBoxFor(model => model.EnquiryMasterCity, new { maxlength = "30", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EnquiryMasterCity)
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.NearestLocationSearch, new { })
                        @Html.TextBoxFor(model => model.NearestLocationSearch, new { @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.NearestLocationSearch)
                </div>
                <div class="col-sm-6" style="padding-top: 15px">
                    <div class="form-group fg-line">
                        <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="Search" id="ButtonEnquiryMasterAddress" type="button" />
                    </div>
                </div>
                <div class="col-sm-12 " id="LocationMap" style="display:none;" >
                    <div id="dvMap" style="height: 300px; width:60%">
                    </div>
                </div>

                <div class="form-group">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateCRMSaleEnquiryMasterRecord" type="button" />
                </div>
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Content/materialtheme/vendors/bower_components/bootstrap-select/dist/js/bootstrap-select.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/materialtheme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('.selectpicker').selectpicker();
        CRMSaleEnquiryMaster.Initialize();       

        $("#ButtonEnquiryMasterAddress").on("click", function () {
            

            $.ajax({
                url: "/CRMSaleEnquiryMaster/FindCoordinates",
                type: "POST",
                dataType: "json",
                data: { txtLocation: $("#NearestLocationSearch").val() },
                success: function (data)
                {
                    var ppp = data;
                    if (ppp != null)
                        var splitData = ppp.split('~');
                    $("#NearestLocationSearch").val(splitData[0])
                    $("#EnquiryMasterLatitude").val(splitData[1])
                    $("#EnquiryMasterLongitude").val(splitData[2])
                    var LatLng = new google.maps.LatLng(splitData[1], splitData[2]);
                    var mapOptions = {
                        center: LatLng,
                        zoom: 13,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };
                    var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
                    var marker = new google.maps.Marker({
                        position: LatLng,
                        map: map,
                        title: "<div style = 'height:100px;width:200px'><b>Your location:</b>" + splitData[0] + "<br />Latitude: " + splitData[1] + "<br />Longitude: " + splitData[2]
                    });
                    google.maps.event.addListener(marker, "click", function (e) {
                        var infoWindow = new google.maps.InfoWindow();
                        infoWindow.setContent(marker.title);
                        infoWindow.open(map, marker);
                    });

                    $("#LocationMap").show();
                },
            })
        });

        //=======================AccountName=================================

        var map = {};
        var getData = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                $('#EnquiryContactPerson').val("");
                $('#CRMSaleEnquiryAccountContactPersonID').val(0);
                $.ajax({
                    url: "/CRMSaleEnquiryMaster/GetAccountDetails",
                    type: "POST",
                    dataType: "json",
                    data: { term: q },
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response) {
                            if (substrRegex.test(response.name)) {
                                map[response.name] = response;
                                matches.push(response.name);
                                //$('#CRMSaleEnquiryAccountMasterID').val(response.id);
                                                               
                            }                            
                        });
                    },
                    async: false
                })
                cb(matches);
            };

        };


        $('#AccountName').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            source: getData()
        }).on("typeahead:selected", function (obj, item) {
            $('#CRMSaleEnquiryAccountMasterID').val(map[item].id);
            
        });

        $('#EnquiryAccountType').change(function () {
            $('#CRMSaleEnquiryAccountMasterID').val(0);
            $('#AccountName').val("");
            $('#EnquiryContactPerson').val("");
            $('#CRMSaleEnquiryAccountContactPersonID').val(0);
            if (this.value == 2) {
                $('#AccountNameDiv').hide();
            } else {
                $('#AccountNameDiv').show();
            }
        });

        //=======================EnquiryContactPerson=================================

        var map1 = {};
        var getDataEnquiryContactPerson = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                
                if ($("#CRMSaleEnquiryAccountMasterID").val() != 0 || $('#EnquiryAccountType :selected').val() == 2) {
                    $.ajax({
                        url: "/CRMSaleEnquiryMaster/GetEnquiryContactPersonDetails",
                        type: "POST",
                        dataType: "json",
                        data: { term: q, AccountMasterID: $("#CRMSaleEnquiryAccountMasterID").val() },
                        success: function (data) {

                            // iterate through the pool of strings and for any string that
                            // contains the substring `q`, add it to the `matches` array
                            $.each(data, function (i, response) {
                                if (substrRegex.test(response.name)) {
                                    map1[response.name] = response;
                                    matches.push(response.name);
                                    //$('#').val(response.id);
                                }
                            });
                        },
                        async: false
                    })
                }
                else {
                    $("#displayErrorMessage p").text("Please select account").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                }
                cb(matches);
            };

        };


        $('#EnquiryContactPerson').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            source: getDataEnquiryContactPerson()
        }).on("typeahead:selected", function (obj, item) {
            $('#CRMSaleEnquiryAccountContactPersonID').val(map1[item].id);
            if ($('#EnquiryAccountType :selected').val() == 2) {
                $('#CRMSaleEnquiryAccountMasterID').val(map1[item].enquiryId);
            }
        });
    });
</script>
