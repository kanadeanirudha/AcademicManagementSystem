@model AMS.ViewModel.CRMSaleTargetDetailsViewModel
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Groupwise Target</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateCRMSaleTargetGroupWise" role="form">
                @Html.HiddenFor(m => m.CRMSaleGroupMasterID)
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.GroupName, new { })
                        @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TargetType, new { })
                        @Html.DropDownListFor(model => model.CRMSaleTargetTypeId, (SelectList)ViewBag.CRMSaleTargetTypeist, "--Select Target Type--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.CRMSaleTargetTypeId)
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TargetValue, new { })
                        @Html.TextBoxFor(model => model.TargetValue, new { @class = "form-control input-sm typeahead", Value = "", maxLength = "10" })
                    </div>
                    @Html.ValidationMessageFor(model => model.TargetValue)
                </div>
                  <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.GeneralPeriodTypeMasterID, new { })
                        @Html.DropDownListFor(model => model.GeneralPeriodTypeMasterID, (SelectList)ViewBag.GetGeneralPeriodTypeMasterList, "--Select Period Type--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.GeneralPeriodTypeMasterID)
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.FromDate, new { })
                        @*<input class="form-control date-picker" type="text" placeholder="Click here..." style="">*@
                        @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control date-picker" })
                    </div>
                    @Html.ValidationMessageFor(model => model.FromDate)
                </div>

              


                <div class="form-group">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateCRMSaleTargetGroupWiseRecord" type="button" />
                </div>


            </form>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/materialtheme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/materialtheme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#FromDate').datetimepicker({
            format: 'DD MMMM YYYY'
        });
        $('#TargetValue').keydown(function (e) {
            AMSValidation.NotAllowSpaces(e);
            AMSValidation.AllowNumbersOnly(e);
        });
        $("#FromDate").on("keydown", function (e) {
            var keycode = (e.keyCode ? e.keyCode : e.which);
            if (keycode != 9) {
                return false;
            }
        })
        CRMSaleTargetGroupWise.Initialize();
    });
</script>
