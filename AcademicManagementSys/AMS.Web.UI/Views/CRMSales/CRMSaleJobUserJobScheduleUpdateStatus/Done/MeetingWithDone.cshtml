
@model AMS.ViewModel.CRMSaleJobUserJobScheduleSheetViewModel

<div id="custom-content">
    <div class="block-header">
        <h2>
            &nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Meeting Status
        </h2>

    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormUpDateMeetingWithDone" role="form">
                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.JobCreationAllocationID)
                @Html.HiddenFor(m => m.CallEnquiryMasterID)
                @Html.HiddenFor(m => m.CRMSaleCallMasterID)
                
                @Html.HiddenFor(m => m.ScheduleType)
                @Html.HiddenFor(m => m.TransactionDate)
                @Html.HiddenFor(m => m.SubScheduleType)

                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ScheduleDescription, new { })
                        @Html.TextBoxFor(model => model.ScheduleDescription, new { maxlength = "200", @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TransactionDate, new { })
                        @Html.TextBoxFor(model => model.TransactionDate, new { @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.FromTime, new { })
                        @Html.TextBoxFor(m => m.FromTime, new { @class = "form-control input-sm time-picker", disabled = "disabled" })
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.UpToTime, new { })
                        @Html.TextBoxFor(m => m.UpToTime, new { @class = "form-control input-sm time-picker", disabled = "disabled" })
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Interestlevel, new { })
                        @Html.DropDownList("Interestlevel", ViewData["Interestlevel"] as List<SelectListItem>, new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Interestlevel)
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.CallStatus, new { })
                        @Html.DropDownList("CallStatus", ViewData["CallStatus"] as List<SelectListItem>, new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.CallStatus)
                </div>

                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Remark, new { })
                        @Html.TextBoxFor(model => model.Remark, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Remark)
                </div>

                @*<div class="col-sm-12" id="uploadVisitingCard">
                    <label class="col-sm-2 control-label" style="padding: 2px 2px 8px 0px;" for="inputEmail3">Upload Visiting Card</label>
                    @Html.FileFor(model => model.VisitingCard)
                </div>*@

                <div class="form-group" style="display:none;">
                    <label class="col-sm-3" style="padding: 14px 16px; width: 18%;"  for="inputEmail3"><span style="color:red;">*</span>Upload Visiting Card</label>
                    <div class="fileinput fileinput-new" data-provides="fileinput" style="padding-top: 11px;">
                        <span class="btn btn-primary btn-file m-r-10">
                            <span class="fileinput-new">Select file</span>
                            <span class="fileinput-exists" style="padding-top: 11px;">Choose File</span>
                            @Html.FileFor(model => model.VisitingCard)
                        </span>
                        <span class="fileinput-filename"></span>
                        <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="top:18px;">&times;</a>
                    </div>
                </div>

                <div class="form-group" style="margin-left:2%;">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="UpdateMeetingWithDoneRecord" type="button" />
                </div>
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/materialtheme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script src="@Url.Content("~/Content/materialtheme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/materialtheme/vendors/fileinput/fileinput.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        CRMSaleJobUserJobScheduleUpdateStatus.Initialize();
    });
</script>
