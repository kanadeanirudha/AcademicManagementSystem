@*@model AMS.ViewModel.OrganisationSubjectGrpRuleViewModel

@Html.HiddenFor(m => m.OrgElectiveGrpMasterID)
<div style="position:relative;">
    <div class="row">
        <div class="span5">
            <div class="row">
                <div class="span2">

                    @Html.LabelFor(m => m.RuleName, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span2" id="ruleName">
                    @Html.DisplayFor(model => model.RuleName, new { maxlength = "240" })
                    <br />
                    @Html.ValidationMessageFor(model => model.RuleName)
                </div>
            </div>
        </div>
        <div class="span5">
            <div class="row" style="display:none">

            </div>
        </div>
    </div>

    <div class="row">
        <div class="span10">
            <div class="row">
                <div class="span2">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(m => m.GroupName, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span8">
                    @Html.TextBoxFor(model => model.GroupName, new { style = "width:100%;", maxlength = "240" })
                    <br />
                    @Html.ValidationMessageFor(model => model.GroupName)
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="span10">
            <div class="row">
                <div class="span2">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(m => m.GroupShortCode, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span8">
                    @Html.TextBoxFor(model => model.GroupShortCode, new { style = "width:100%;", maxlength = "30" })
                    <br />
                    @Html.ValidationMessageFor(model => model.GroupShortCode)
                </div>
            </div>

        </div>
    </div>


    <div class="row">
        <div class="span5">

            <div class="row">
                <div class="span2">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(m => m.NoOfSubGroups, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(m => m.NoOfSubGroups, new { type = "number", min = "0" })
                    <br />
                    @Html.ValidationMessageFor(model => model.NoOfSubGroups)
                </div>
            </div>
        </div>
        <div class="span5">
            <div class="row">
                <div class="span2">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(m => m.NoOfCompulsorySubGrp, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(m => m.NoOfCompulsorySubGrp, new { type = "number", min = "0" })
                    <br />
                    @Html.ValidationMessageFor(model => model.NoOfCompulsorySubGrp)
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="span5">
            <div class="row">
                <div class="span2">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(m => m.NoOfSubGrpSubjectSelect, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(m => m.NoOfSubGrpSubjectSelect, new { type = "number", min = "0" })
                    <br />
                    @Html.ValidationMessageFor(model => model.NoOfSubGrpSubjectSelect)
                </div>
            </div>
        </div>
        <div class="span5">
            <div class="row">
                <div class="span2">
                   
                    @Html.LabelFor(m => m.GroupCompulsoryFlag, new { @class = "", style = "font-weight:bold" })
                </div>
                <div class="span2">
                    @Html.CheckBoxFor(m => m.GroupCompulsoryFlag)
                    <br />
                    @Html.ValidationMessageFor(model => model.GroupCompulsoryFlag)
                </div>
            </div>
        </div>
    </div>
    <div class="form-actions" style="border: 1px solid #e5e5e5; text-align: right">

        <input type="button" id="OrganisationElectiveGrpRulePreviousbtn" style="float: left;" value="@Resources.ButtonAction_Previous" class="btn " />
        <input type="button" id="AddGroup" style="float:left;margin-left:78%" value="@Resources.ButtonAction_AddGroup" class="btn btn-primary" />
        <input type="button" id="OrganisationElectiveGrpRuleNextbtn" style="float: right;" value="@Resources.ButtonAction_Next" class="btn " />

    </div>

    <div class="row control-group" style="text-align: center">
        <table id="myTableElectiveGroupRule" class="display" style="width: 97%; margin-left: 3%; border: 2px solid #addbf3;">
            <thead>

                <tr>
                    <th style="text-align: center; width: 30%;">@Resources.TableHeaders_GroupDescription/th>
                    <th style="text-align: center; width: 30%;">@Resources.TableHeaders_ShortCode</th>
                    <th style="text-align: center; width: 10%">@Resources.TableHeaders_SubGroup</th>
                    <th style="text-align: center; width: 10%">@Resources.TableHeaders_CompulsoryGroup</th>
                    <th style="text-align: center; text-decoration: none; width: 10%">@Resources.TableHeaders_AllocationStatus</th>
                    <th style="text-align: center; text-decoration: none; width: 10%">@Resources.TableHeaders_Action</th>

                </tr>
            </thead>
        </table>

    </div>

    </div>




<script type="text/javascript">

    var oTable;
    $(document).ready(function () {
        // OrganisationSubjectGrpRule.Initialize();


        oTable = $('#myTableElectiveGroupRule').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/OrganisationSubjectGrpRule/AjaxHandlerElectiveGroup",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "GrpRuleID", "value": $('#ID').val() });
            },
            "bProcessing": true,
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [



                                { "bSortable": false, "aTargets": [0] },
                                { "bSortable": false, "aTargets": [1] },
                                { "bSortable": false, "aTargets": [2] },
                                { "bSortable": false, "aTargets": [3] },
                                { "bSortable": false, "aTargets": [4] },
                                { "bSortable": false, "aTargets": [5] },
                                {
                                    "targets": 4,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var chkStatus = '';
                                        var chkTrueFalse;
                                        if (data[6] == "True") {
                                            chkStatus = 'checked';
                                            chkTrueFalse = true;
                                        }
                                        else {
                                            chkStatus = '';
                                            chkTrueFalse = false;
                                        }
                                        var result = "<p  style='text-align: center; height:5px;'>" + '<input id="IsActive" class="CheckBox" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' />' + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 5,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        result = '<input id="hdnElectiveGrpID"  value = ' + data[4] + "~" + data[5] + "~" + data[6] + ' type="hidden" />' + '<a href="#"><i class="icon-edit"></i></a>';
                                        return result;
                                    }
                                }

            ]
        });






    });



    function ReloadElectiveGroupRuleTable() {
        oTable.fnReloadAjax("OrganisationSubjectGrpRule/AjaxHandlerElectiveGroup");
    }

    function ListViewReload() {
        var oTableList = $('#myDataTable').dataTable();
        oTableList.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandler');
    }

</script>

<style>
    .hide_column {
        display: none;
    }

    .text-decoration {
        text-decoration: none;
    }

    .paging_full_numbers {
        display: none;
    }

    .paginate_button {
        display: none;
    }

    div.dataTables_paginate {
        display: none;
    }

    .dataTables_paginate {
        display: none;
    }

    div.dataTables_info {
        display: none;
    }

    .dataTables_info {
        display: none;
    }
</style>*@

@*-----new code--------*@

@model AMS.ViewModel.OrganisationSubjectGrpRuleViewModel

<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>

@Html.HiddenFor(m => m.OrgElectiveGrpMasterID)

@*<div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;</h2>
    </div>*@
<div class="card-body card-padding" style="">
    <div id="displayErrorMessage" role="alert" hidden class="alert">
        <button class="close" type="button"><span aria-hidden="true">×</span></button>
        <p id="messageContent"></p>
    </div>
    
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.CourseYearSemesterID)

    <div class="col-sm-12">
        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.RuleName, new { @class = "", style = "" })
            <div class="form-group  fg-line">
                @Html.DisplayFor(model => model.RuleName, new { @class = "form-control", maxlength = "240" })
            </div>
            @Html.ValidationMessageFor(model => model.RuleName)
        </div>

        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.GroupName, new { @class = "", style = "font-weight:bold" })
            <div class="form-group  fg-line">
                @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control", style = "", maxlength = "240" })
            </div>
            @Html.ValidationMessageFor(model => model.GroupName)
        </div>
    </div>

    <div class="col-sm-12">
        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.GroupShortCode, new { @class = "", style = "" })
            <div class="form-group  fg-line">
                @Html.TextBoxFor(m => m.GroupShortCode, new { @class = "form-control", maxlength = "30" })
            </div>
            @Html.ValidationMessageFor(model => model.GroupShortCode)
        </div>

        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.NoOfSubGroups, new { @class = "", style = "" })
            <div class="form-group fg-line">
                @Html.TextBoxFor(m => m.NoOfSubGroups, new { @class = "form-control", min = "0" })
            </div>
            @Html.ValidationMessageFor(model => model.NoOfSubGroups)
        </div>
    </div>

    <div class="col-sm-12">
        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.NoOfCompulsorySubGrp, new { @class = "", style = "" })
            <div class="form-group fg-line">
                @Html.TextBoxFor(m => m.NoOfCompulsorySubGrp, new { @class = "form-control", type = "number", min = "0" })
            </div>
            @Html.ValidationMessageFor(model => model.NoOfCompulsorySubGrp)
        </div>

        <div class="col-sm-6">
            <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
            @Html.LabelFor(m => m.NoOfSubGrpSubjectSelect, new { @class = "", style = "" })
            <div class="form-group fg-line">
                @Html.TextBoxFor(m => m.NoOfSubGrpSubjectSelect, new { @class = "form-control", type = "number", min = "0" })
            </div>
            @Html.ValidationMessageFor(model => model.NoOfSubGrpSubjectSelect)
        </div>
    </div>

    <div class="col-sm-12">
        <div class="col-sm-6">
            <div class="form-group fg-line">
                <div class="checkbox m-b-15" style="">
                    <label style="">
                        <input type="checkbox" id="GroupCompulsoryFlag">
                        <i class="input-helper"></i>
                        @Html.LabelFor(m => m.GroupCompulsoryFlag, new { @class = "", style = "" })
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.GroupCompulsoryFlag)
            </div>
        </div>
    </div>

    <div class="col-sm-12">
        <div class="form-group" style="margin-left: 2%; ">
            <button type="button" id="OrganisationElectiveGrpRulePreviousbtn" value="@Resources.ButtonAction_Previous" class="btn btn-default">@Resources.ButtonAction_Previous</button>
            <button type="button" id="AddGroup" value="@Resources.ButtonAction_AddGroup" class="btn btn-primary">@Resources.ButtonAction_AddGroup</button>
            <button type="button" id="OrganisationElectiveGrpRuleNextbtn" style="float: right;" value="@Resources.ButtonAction_Next" class="btn btn-default">@Resources.ButtonAction_Next</button>
        </div>
    </div>

    <table id="myTableElectiveGroupRule" class="table table-striped table-vmiddle table-responsive " style="width: 97%; margin-left: 3%;">
        <thead>
            <tr>
                <th>@Resources.TableHeaders_GroupDescription</th>
                <th>@Resources.TableHeaders_ShortCode</th>
                <th>@Resources.TableHeaders_SubGroup</th>
                <th>@Resources.TableHeaders_CompulsoryGroup</th>
                <th>@Resources.TableHeaders_AllocationStatus</th>
                <th>@Resources.TableHeaders_Action</th>
            </tr>
        </thead>
    </table>
    
    
</div>

@*<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>*@
<script type="text/javascript">

    var oTable;
    $(document).ready(function () {
        // OrganisationSubjectGrpRule.Initialize();


        oTable = $('#myTableElectiveGroupRule').DataTable({
            "bServerSide": true,
            "sAjaxSource": "/OrganisationSubjectGrpRule/AjaxHandlerElectiveGroup",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "GrpRuleID", "value": $('#ID').val() });
            },
            "bProcessing": true,
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [



                                { "bSortable": false, "aTargets": [0] },
                                { "bSortable": false, "aTargets": [1] },
                                { "bSortable": false, "aTargets": [2] },
                                { "bSortable": false, "aTargets": [3] },
                                { "bSortable": false, "aTargets": [4] },
                                { "bSortable": false, "aTargets": [5] },
                                {
                                    "targets": 4,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        var chkStatus = '';
                                        var chkTrueFalse;
                                        if (data[6] == "True") {
                                            chkStatus = 'checked';
                                            chkTrueFalse = true;
                                        }
                                        else {
                                            chkStatus = '';
                                            chkTrueFalse = false;
                                        }
                                        //var result = "<p  style='text-align: center; height:5px;'>" + '<input id="IsActive" class="CheckBox" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' />' + "</p>";
                                        var result = "<p  class='checkbox' style=''>" + '<input id="IsActive"  value = ' + chkTrueFalse + 'type="checkbox" disabled ' + chkStatus + ' /><i class="input-helper"></i>' + "</p>";

                                        return result;

                                    }
                                },
                                {
                                    "targets": 5,
                                    "bSortable": false,
                                    "data": null,
                                    "render": function (data, type, full, meta) {
                                        //result = '<input id="hdnElectiveGrpID"  value = ' + data[4] + "~" + data[5] + "~" + data[6] + ' type="hidden" />' + '<a href="#"><i class="icon-edit"></i></a>';
                                        result = '<input id="hdnElectiveGrpID"  value = ' + data[4] + "~" + data[5] + "~" + data[6] + ' type="hidden" />' + '<button type="button" class="btn btn-default" href="#"><i class="zmdi zmdi-edit"></i></a>';
                                        return result;
                                    }
                                }

            ]
        });


        DataTableSettings(oTable, "myTableElectiveGroupRule", "toggleTableColumn");



    });



    function ReloadElectiveGroupRuleTable() {
        oTable = $('#myTableElectiveGroupRule').dataTable();
        oTable.fnReloadAjax("OrganisationSubjectGrpRule/AjaxHandlerElectiveGroup");
    }

    function ListViewReload() {
        var oTableList = $('#myDataTable').dataTable();
        oTableList.fnReloadAjax('OrganisationSyllabusGroupMaster/AjaxHandler');
    }

</script>