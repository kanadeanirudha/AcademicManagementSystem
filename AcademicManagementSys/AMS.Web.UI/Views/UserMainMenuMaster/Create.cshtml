@*@model AMS.ViewModel.UserMainMenuMasterViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div id="update-message" class="error invisible"></div>
<div class="widget-block" style="height: auto">
    <div class="widget-head">
        <h5>@Resources.FormCreate_Menu</h5>
    </div>
    <div class="widget-box">
        <form id="FormCreateUserMainMenuMaster" method="post" class="form-horizontal well">
            <fieldset>
                <legend style="display: none;"></legend>
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.ModuleID)
                @Html.HiddenFor(model => model.ModuleCode)               
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="nonboxy-widget">
                    <div class="row">
                        <div class="span9">
                            <h5></h5>
                        </div>
                    </div>
                    <div class="row control-group">
                        <div class="span2">
                              <span style="color:red;float:left;padding-left:1px;font-weight:bold">*</span>
                            @Html.LabelFor(model => model.MenuName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.MenuName, new { maxlength = "50",style = "font-Weight:Bold;" })
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuName)
                        </div>

                        <div class="span2">
                              <span style="color:red;float:left;padding-left:1px;font-weight:bold">*</span>
                            @Html.LabelFor(model => model.MenuCode, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.MenuCode, new { maxlength = "50",style = "font-Weight:Bold;" })
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuCode)
                        </div>
                    </div>

                    <div class="row control-group">  
                         <div class="span2">
                            <label for="input01" class=""><b> Is parent menu?</b> </label>
                        </div>
                        <div class="span3">                            
                               @Html.RadioButtonFor(model => model.IsParent, false, new { id = "IsParentNO" })&nbsp;&nbsp;&nbsp; NO &nbsp;&nbsp;&nbsp;  @Html.RadioButtonFor(model => model.IsParent, true, new { id = "IsParentYES" })&nbsp;&nbsp;&nbsp;YES
                        </div>   
                        <div id="ParentMenuNameID">
                        <div  class="span2">
                            @Html.LabelFor(model => model.ParentMenuName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            
                            @Html.DropDownList("UserParentMenuList", ViewData["UserParentMenuList"] as List<SelectListItem>, new { style = "width:212px;height: 25px;font-Weight:Bold;", @class = "dropdown1" })
                            <br />
                            @Html.ValidationMessageFor(model => model.ParentMenuName)
                        </div>
                        </div>                  
                    </div>

               

                    <div class="row control-group" id="divoptional">
                        <div class="span2">
                            @Html.LabelFor(model => model.MenuInnerLevel, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.MenuInnerLevel, new { min = "0", style = "width:73%;",maxlength = "3"})
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuInnerLevel)
                        </div>
                        <div class="span2">
                            <span style="color:red;float:left;padding-left:1px;font-weight:bold">*</span>
                            @Html.LabelFor(model => model.MenuLink, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.MenuLink, new { style = "font-Weight:Bold;",maxlength = "50" })
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuLink)
                        </div>
                       
                    </div>
                    <div class="row control-group" id="divoptional1">
                        <div class="span2">
                            @Html.LabelFor(model => model.DisableDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            &nbsp;
                            @Html.TextBoxFor(model => model.DisableDate,new {ReadOnly = "True",style = "font-Weight:Bold;" })&nbsp; <img id="DisableDate_Clear" alt="Clear" style="width:25px;height:25px" title="Clear" src="/Content/images/clean.png" />    
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.RemarkAboutDisable, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.RemarkAboutDisable, new { style = "font-Weight:Bold;",maxlength = "100" })
                        </div>
                    </div>
                     <div class="row control-group">
                        <div class="span2">
                            <span style="color:red;float:left;padding-left:1px;font-weight:bold">*</span>
                          @Html.LabelFor(model => model.MenuToolTip, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.MenuToolTip, new { style = "font-Weight:Bold;" ,maxlength = "50" })
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuToolTip)
                        </div>
                        <div class="span2">
                              <span style="color:red;float:left;padding-left:1px;font-weight:bold">*</span>
                            @Html.LabelFor(model => model.MenuIconName, new { style = "font-Weight:Bold;" ,maxlength = "15" })
                        </div>
                        <div class="span3">                            
                            @Html.TextBoxFor(model => model.MenuIconName, new { style = "font-Weight:Bold;" })
                            <br />
                            @Html.ValidationMessageFor(model => model.MenuIconName)
                        </div>
                    </div>

                    <div class="form-actions" style="text-align: right;height:10px;">
                        <input type="button" id="CreateUserMainMenuMasterRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary" />
                        <input name="" id="reset" type="submit" class="btn" value="@Resources.ButtonAction_Reset" />                        
                    </div>

                </div>

            </fieldset>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        UserMainMenuMaster.Initialize();
    });
</script>

<style>
   .span1 {
       width: 75px;
   }

   .span2 {
       width: 115px;
   }

   
</style>*@

@*------new code-------*@

@model AMS.ViewModel.UserMainMenuMasterViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormCreate_Menu</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateUserMainMenuMaster">
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.ModuleID)
                @Html.HiddenFor(model => model.ModuleCode)
                @Html.HiddenFor(model => model.ParentMenuID)
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuName, new { })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.MenuName, new { @class = "form-control", maxlength = "50", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuName)
                    </div>

                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuCode, new { })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.MenuCode, new { @class = "form-control", maxlength = "50", style = "font-Weight:Bold;" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuCode)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        Is parent menu?
                        <div class="form-group  fg-line">
                           <label class="radio radio-inline m-r-20">
                                @Html.RadioButtonFor(model => model.IsParent, false, new { id = "IsParentNO" }) 
                                <i class="input-helper"></i>
                                <b> No </b>
                            </label>

                            <label class="radio radio-inline m-r-20">
                                @Html.RadioButtonFor(model => model.IsParent, true, new { id = "IsParentYES" })
                                <i class="input-helper"></i>
                                <b> Yes</b>
                            </label>
                        </div>
                    </div>

                    <div class="col-sm-6" id="ParentMenuNameID">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.ParentMenuName, new { })
                        <div class="form-group fg-line select">
                            @Html.DropDownList("UserParentMenuList", ViewData["UserParentMenuList"] as List<SelectListItem>, new { @class = "form-control", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ParentMenuName)
                    </div>
                </div>

                <div class="col-sm-12" id="divoptional">
                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuInnerLevel, new { })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.MenuInnerLevel, new { @class = "form-control", min = "0", style = "", maxlength = "3" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuInnerLevel)
                    </div>

                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuLink, new { })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.MenuLink, new { @class = "form-control", style = "", maxlength = "50" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuLink)
                    </div>
                </div>

                <div class="col-sm-12" id="divoptional1">
                    <div class="col-sm-5">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.DisableDate, new { })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.DisableDate, new { @class = "form-control", ReadOnly = "True", style = "background-color:#fff;" })
                        </div>
                    </div>
                    
                    <div class="col-sm-1" style="padding-top:15px;">
                        <button class="btn bgm-teal waves-effect" id="DisableDate_Clear" type="button"><i class="zmdi zmdi-refresh"></i></button>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.RemarkAboutDisable, new { })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.RemarkAboutDisable, new { @class = "form-control", style = "", maxlength = "100" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuToolTip, new { })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.MenuToolTip, new { @class = "form-control", style = "", maxlength = "50" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuToolTip)
                    </div>

                    <div class="col-sm-6">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuIconName, new { })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.MenuIconName, new { @class = "form-control", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MenuIconName)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MenuDisplaySeqNo, new { })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.MenuDisplaySeqNo, new { @class = "form-control", min = "0", type = "number", })
                        </div>
                    </div>
                    </div>
                    <div class="form-group" style="margin-left: 2%; ">
                        <button type="button" id="CreateUserMainMenuMasterRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                        <button name="" id="reset" type="submit" class="btn btn-default" value="@Resources.ButtonAction_Reset">@Resources.ButtonAction_Reset</button>
                    </div>
</form>

        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        UserMainMenuMaster.Initialize();
    });
</script>